

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Jul 30 18:55:42 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=4,class=CODE,delta=1
    19                           	psect	ivt0x4008,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.35
    26                           ; Generated 05/05/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F25K83 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     _T0CON1bits	set	16313
    61  0000                     _OSCTUNE	set	14814
    62  0000                     _OSCFRQ	set	14815
    63  0000                     _LATCbits	set	16316
    64  0000                     _IPR3bits	set	14723
    65  0000                     _OSCCON1	set	14809
    66  0000                     _ANSELA	set	14912
    67  0000                     _ANSELB	set	14928
    68  0000                     _ANSELC	set	14944
    69  0000                     _TMR0L	set	16310
    70  0000                     _TMR0H	set	16311
    71  0000                     _T0CON0bits	set	16312
    72  0000                     _LATA	set	16314
    73  0000                     _TRISA	set	16322
    74  0000                     _PORTA	set	16330
    75  0000                     _TRISC	set	16324
    76  0000                     _TRISB	set	16323
    77  0000                     _LATC	set	16316
    78  0000                     _LATB	set	16315
    79  0000                     _INTCON0bits	set	16338
    80  0000                     _PORTC	set	16332
    81  0000                     _PORTB	set	16331
    82  0000                     _OSCCON3	set	14811
    83  0000                     _OSCEN	set	14813
    84  0000                     _PIE3bits	set	14739
    85  0000                     _PIR3bits	set	14755
    86  0000                     _IVTBASEL	set	16341
    87  0000                     _IVTBASEH	set	16342
    88  0000                     _IVTBASEU	set	16343
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93  00427C                     __pcinit:
    94                           	callstack 0
    95  00427C                     start_initialization:
    96                           	callstack 0
    97  00427C                     __initialization:
    98                           	callstack 0
    99                           
   100                           ; Clear objects allocated to COMRAM (3 bytes)
   101  00427C  6A09               	clrf	(__pbssCOMRAM+2)& (0+255),c
   102  00427E  6A08               	clrf	(__pbssCOMRAM+1)& (0+255),c
   103  004280  6A07               	clrf	__pbssCOMRAM& (0+255),c
   104                           
   105                           ;
   106                           ; Setup IVTBASE
   107                           ;
   108  004282  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   109  004284  6ED5               	movwf	213,c
   110  004286  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   111  004288  6ED6               	movwf	214,c
   112  00428A  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   113  00428C  6ED7               	movwf	215,c
   114  00428E                     end_of_initialization:
   115                           	callstack 0
   116  00428E                     __end_of__initialization:
   117                           	callstack 0
   118  00428E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   119  004290  6EF8               	movwf	tblptru,c
   120  004292  0100               	movlb	0
   121  004294  EF7B  F021         	goto	_main	;jump to C main() function
   122                           
   123                           	psect	bssCOMRAM
   124  000007                     __pbssCOMRAM:
   125                           	callstack 0
   126  000007                     _LED_ROTER:
   127                           	callstack 0
   128  000007                     	ds	1
   129  000008                     _counterTMR0:
   130                           	callstack 0
   131  000008                     	ds	1
   132  000009                     _TIMER0_OVR_FLAG:
   133                           	callstack 0
   134  000009                     	ds	1
   135                           
   136                           	psect	cstackCOMRAM
   137  000001                     __pcstackCOMRAM:
   138                           	callstack 0
   139  000001                     ??_IO_LEDPrintChar:
   140  000001                     ??_RTCC_Update:
   141  000001                     
   142                           ; 1 bytes @ 0x0
   143  000001                     	ds	1
   144  000002                     
   145                           ; 1 bytes @ 0x1
   146  000002                     	ds	1
   147  000003                     IO_LEDPrintChar@LEDCHAR:
   148                           	callstack 0
   149                           
   150                           ; 1 bytes @ 0x2
   151  000003                     	ds	1
   152  000004                     ??_IO_LEDHello:
   153                           
   154                           ; 1 bytes @ 0x3
   155  000004                     	ds	2
   156  000006                     IO_LEDHello@LED_COUNTER:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x5
   160  000006                     	ds	1
   161  000007                     
   162                           ; 1 bytes @ 0x6
   163 ;;
   164 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   165 ;;
   166 ;; *************** function _main *****************
   167 ;; Defined at:
   168 ;;		line 22 in file "main.c"
   169 ;; Parameters:    Size  Location     Type
   170 ;;		None
   171 ;; Auto vars:     Size  Location     Type
   172 ;;		None
   173 ;; Return value:  Size  Location     Type
   174 ;;                  1    wreg      void 
   175 ;; Registers used:
   176 ;;		wreg, status,2, status,0, cstack
   177 ;; Tracked objects:
   178 ;;		On entry : 0/0
   179 ;;		On exit  : 0/0
   180 ;;		Unchanged: 0/0
   181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   182 ;;      Params:         0       0       0       0       0       0       0       0       0
   183 ;;      Locals:         0       0       0       0       0       0       0       0       0
   184 ;;      Temps:          0       0       0       0       0       0       0       0       0
   185 ;;      Totals:         0       0       0       0       0       0       0       0       0
   186 ;;Total ram usage:        0 bytes
   187 ;; Hardware stack levels required when called: 4
   188 ;; This function calls:
   189 ;;		_SYSTEM_Initialize
   190 ;;		_SYSTEM_Process
   191 ;; This function is called by:
   192 ;;		Startup code after reset
   193 ;; This function uses a non-reentrant model
   194 ;;
   195                           
   196                           	psect	text0
   197  0042F6                     __ptext0:
   198                           	callstack 0
   199  0042F6                     _main:
   200                           	callstack 27
   201  0042F6                     
   202                           ;main.c: 23:     SYSTEM_Initialize();
   203  0042F6  EC4C  F021         	call	_SYSTEM_Initialize	;wreg free
   204  0042FA                     l11:
   205                           
   206                           ;main.c: 25:         SYSTEM_Process();
   207  0042FA  EC83  F021         	call	_SYSTEM_Process	;wreg free
   208  0042FE  EF7D  F021         	goto	l11
   209  004302  EF54  F020         	goto	start
   210  004306                     __end_of_main:
   211                           	callstack 0
   212                           
   213 ;; *************** function _SYSTEM_Process *****************
   214 ;; Defined at:
   215 ;;		line 41 in file "mcu.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, status,2, status,0, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : 0/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   229 ;;      Params:         0       0       0       0       0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0       0       0       0       0
   231 ;;      Temps:          0       0       0       0       0       0       0       0       0
   232 ;;      Totals:         0       0       0       0       0       0       0       0       0
   233 ;;Total ram usage:        0 bytes
   234 ;; Hardware stack levels used: 1
   235 ;; Hardware stack levels required when called: 2
   236 ;; This function calls:
   237 ;;		_RTCC_Update
   238 ;; This function is called by:
   239 ;;		_main
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243                           	psect	text1
   244  004306                     __ptext1:
   245                           	callstack 0
   246  004306                     _SYSTEM_Process:
   247                           	callstack 28
   248  004306                     
   249                           ;mcu.c: 42:     RTCC_Update();
   250  004306  EC9F  F020         	call	_RTCC_Update	;wreg free
   251  00430A  0012               	return		;funcret
   252  00430C                     __end_of_SYSTEM_Process:
   253                           	callstack 0
   254                           
   255 ;; *************** function _RTCC_Update *****************
   256 ;; Defined at:
   257 ;;		line 186 in file "mcu.c"
   258 ;; Parameters:    Size  Location     Type
   259 ;;		None
   260 ;; Auto vars:     Size  Location     Type
   261 ;;		None
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		wreg, status,2, status,0
   266 ;; Tracked objects:
   267 ;;		On entry : 0/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   271 ;;      Params:         0       0       0       0       0       0       0       0       0
   272 ;;      Locals:         0       0       0       0       0       0       0       0       0
   273 ;;      Temps:          1       0       0       0       0       0       0       0       0
   274 ;;      Totals:         1       0       0       0       0       0       0       0       0
   275 ;;Total ram usage:        1 bytes
   276 ;; Hardware stack levels used: 1
   277 ;; Hardware stack levels required when called: 1
   278 ;; This function calls:
   279 ;;		Nothing
   280 ;; This function is called by:
   281 ;;		_SYSTEM_Process
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285                           	psect	text2
   286  00413E                     __ptext2:
   287                           	callstack 0
   288  00413E                     _RTCC_Update:
   289                           	callstack 28
   290  00413E                     
   291                           ;mcu.c: 187:     if(TIMER0_OVR_FLAG){
   292  00413E  5009               	movf	_TIMER0_OVR_FLAG^0,w,c
   293  004140  B4D8               	btfsc	status,2,c
   294  004142  EFA5  F020         	goto	u31
   295  004146  EFA7  F020         	goto	u30
   296  00414A                     u31:
   297  00414A  EFD7  F020         	goto	l176
   298  00414E                     u30:
   299  00414E                     
   300                           ;mcu.c: 188:         counterTMR0++;
   301  00414E  2A08               	incf	_counterTMR0^0,f,c
   302  004150                     
   303                           ;mcu.c: 189:         if(counterTMR0>9){
   304  004150  0E09               	movlw	9
   305  004152  6408               	cpfsgt	_counterTMR0^0,c
   306  004154  EFAE  F020         	goto	u41
   307  004158  EFB0  F020         	goto	u40
   308  00415C                     u41:
   309  00415C  EFD5  F020         	goto	l171
   310  004160                     u40:
   311  004160                     
   312                           ;mcu.c: 190:             counterTMR0 = 0;
   313  004160  0E00               	movlw	0
   314  004162  6E08               	movwf	_counterTMR0^0,c
   315  004164  B8BC               	btfsc	188,4,c	;volatile
   316  004166  EFB7  F020         	goto	u51
   317  00416A  EFBA  F020         	goto	u50
   318  00416E                     u51:
   319  00416E  0E01               	movlw	1
   320  004170  EFBB  F020         	goto	u56
   321  004174                     u50:
   322  004174  0E00               	movlw	0
   323  004176                     u56:
   324  004176  0AFF               	xorlw	255
   325  004178  6E01               	movwf	??_RTCC_Update^0,c
   326  00417A  3A01               	swapf	??_RTCC_Update^0,f,c
   327  00417C  50BC               	movf	188,w,c	;volatile
   328  00417E  1801               	xorwf	??_RTCC_Update^0,w,c
   329  004180  0BEF               	andlw	-17
   330  004182  1801               	xorwf	??_RTCC_Update^0,w,c
   331  004184  6EBC               	movwf	188,c	;volatile
   332  004186  BABC               	btfsc	188,5,c	;volatile
   333  004188  EFC8  F020         	goto	u61
   334  00418C  EFCB  F020         	goto	u60
   335  004190                     u61:
   336  004190  0E01               	movlw	1
   337  004192  EFCC  F020         	goto	u66
   338  004196                     u60:
   339  004196  0E00               	movlw	0
   340  004198                     u66:
   341  004198  0AFF               	xorlw	255
   342  00419A  6E01               	movwf	??_RTCC_Update^0,c
   343  00419C  3A01               	swapf	??_RTCC_Update^0,f,c
   344  00419E  4601               	rlncf	??_RTCC_Update^0,f,c
   345  0041A0  50BC               	movf	188,w,c	;volatile
   346  0041A2  1801               	xorwf	??_RTCC_Update^0,w,c
   347  0041A4  0BDF               	andlw	-33
   348  0041A6  1801               	xorwf	??_RTCC_Update^0,w,c
   349  0041A8  6EBC               	movwf	188,c	;volatile
   350  0041AA                     l171:
   351                           
   352                           ;mcu.c: 194:         TIMER0_OVR_FLAG = 0;
   353  0041AA  0E00               	movlw	0
   354  0041AC  6E09               	movwf	_TIMER0_OVR_FLAG^0,c
   355  0041AE                     l176:
   356  0041AE  0012               	return		;funcret
   357  0041B0                     __end_of_RTCC_Update:
   358                           	callstack 0
   359                           
   360 ;; *************** function _SYSTEM_Initialize *****************
   361 ;; Defined at:
   362 ;;		line 23 in file "mcu.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, status,2, status,0, cstack
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   376 ;;      Params:         0       0       0       0       0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0       0       0       0       0
   379 ;;      Totals:         0       0       0       0       0       0       0       0       0
   380 ;;Total ram usage:        0 bytes
   381 ;; Hardware stack levels used: 1
   382 ;; Hardware stack levels required when called: 3
   383 ;; This function calls:
   384 ;;		_INTERRUPT_GlobalInterruptEnable
   385 ;;		_IO_LEDHello
   386 ;;		_IO_LEDPrintChar
   387 ;;		_MCU_Initialize
   388 ;;		_OSCILLATOR_Initialize
   389 ;;		_RTCC_Enable
   390 ;; This function is called by:
   391 ;;		_main
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           	psect	text3
   396  004298                     __ptext3:
   397                           	callstack 0
   398  004298                     _SYSTEM_Initialize:
   399                           	callstack 27
   400  004298                     
   401                           ;mcu.c: 24:     MCU_Initialize();
   402  004298  EC0B  F021         	call	_MCU_Initialize	;wreg free
   403                           
   404                           ;mcu.c: 25:     OSCILLATOR_Initialize();
   405  00429C  EC5A  F021         	call	_OSCILLATOR_Initialize	;wreg free
   406                           
   407                           ;mcu.c: 26:     RTCC_Enable();
   408  0042A0  EC25  F021         	call	_RTCC_Enable	;wreg free
   409                           
   410                           ;mcu.c: 27:     INTERRUPT_GlobalInterruptEnable();
   411  0042A4  EC66  F021         	call	_INTERRUPT_GlobalInterruptEnable	;wreg free
   412  0042A8                     
   413                           ;mcu.c: 28:     IO_LEDHello();
   414  0042A8  ECD8  F020         	call	_IO_LEDHello	;wreg free
   415  0042AC                     
   416                           ;mcu.c: 29:     IO_LEDPrintChar(0);
   417  0042AC  0E00               	movlw	0
   418  0042AE  EC56  F020         	call	_IO_LEDPrintChar
   419  0042B2  0012               	return		;funcret
   420  0042B4                     __end_of_SYSTEM_Initialize:
   421                           	callstack 0
   422                           
   423 ;; *************** function _RTCC_Enable *****************
   424 ;; Defined at:
   425 ;;		line 171 in file "mcu.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;		None
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, status,2
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   439 ;;      Params:         0       0       0       0       0       0       0       0       0
   440 ;;      Locals:         0       0       0       0       0       0       0       0       0
   441 ;;      Temps:          0       0       0       0       0       0       0       0       0
   442 ;;      Totals:         0       0       0       0       0       0       0       0       0
   443 ;;Total ram usage:        0 bytes
   444 ;; Hardware stack levels used: 1
   445 ;; Hardware stack levels required when called: 1
   446 ;; This function calls:
   447 ;;		Nothing
   448 ;; This function is called by:
   449 ;;		_SYSTEM_Initialize
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           	psect	text4
   454  00424A                     __ptext4:
   455                           	callstack 0
   456  00424A                     _RTCC_Enable:
   457                           	callstack 28
   458  00424A                     
   459                           ;mcu.c: 172:     T0CON0bits.MD16 = 1;
   460  00424A  88B8               	bsf	184,4,c	;volatile
   461  00424C                     
   462                           ;mcu.c: 173:     T0CON0bits.OUTPS = 0b0000;
   463  00424C  0EF0               	movlw	-16
   464  00424E  16B8               	andwf	184,f,c	;volatile
   465                           
   466                           ;mcu.c: 174:     T0CON1bits.CS = 0b010;
   467  004250  50B9               	movf	185,w,c	;volatile
   468  004252  0B1F               	andlw	-225
   469  004254  0940               	iorlw	64
   470  004256  6EB9               	movwf	185,c	;volatile
   471                           
   472                           ;mcu.c: 175:     T0CON1bits.CKPS = 0b100;
   473  004258  50B9               	movf	185,w,c	;volatile
   474  00425A  0BF0               	andlw	-16
   475  00425C  0904               	iorlw	4
   476  00425E  6EB9               	movwf	185,c	;volatile
   477  004260                     
   478                           ;mcu.c: 176:     T0CON0bits.EN = 1;
   479  004260  8EB8               	bsf	184,7,c	;volatile
   480  004262                     
   481                           ;mcu.c: 177:     IPR3bits.TMR0IP = 0;
   482  004262  0139               	movlb	57	; () banked
   483  004264  9F83               	bcf	131,7,b	;volatile
   484  004266                     
   485                           ; BSR set to: 57
   486                           ;mcu.c: 178:     PIE3bits.TMR0IE = 1;
   487  004266  8F93               	bsf	147,7,b	;volatile
   488  004268                     
   489                           ; BSR set to: 57
   490                           ;mcu.c: 179:     PIR3bits.TMR0IF = 0;
   491  004268  9FA3               	bcf	163,7,b	;volatile
   492                           
   493                           ;mcu.c: 180:     TIMER0_OVR_FLAG = 0;
   494  00426A  0E00               	movlw	0
   495  00426C  6E09               	movwf	_TIMER0_OVR_FLAG^0,c
   496                           
   497                           ;mcu.c: 181:     counterTMR0 = 0;
   498  00426E  0E00               	movlw	0
   499  004270  6E08               	movwf	_counterTMR0^0,c
   500                           
   501                           ;mcu.c: 182:     ((void)(TMR0H=((53036)>>8),TMR0L=((53036)&0xFF)));
   502  004272  0ECF               	movlw	207
   503  004274  6EB7               	movwf	183,c	;volatile
   504  004276  0E2C               	movlw	44
   505  004278  6EB6               	movwf	182,c	;volatile
   506  00427A                     
   507                           ; BSR set to: 57
   508  00427A  0012               	return		;funcret
   509  00427C                     __end_of_RTCC_Enable:
   510                           	callstack 0
   511                           
   512 ;; *************** function _OSCILLATOR_Initialize *****************
   513 ;; Defined at:
   514 ;;		line 81 in file "mcu.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg, status,2
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   528 ;;      Params:         0       0       0       0       0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0       0       0       0       0
   531 ;;      Totals:         0       0       0       0       0       0       0       0       0
   532 ;;Total ram usage:        0 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; Hardware stack levels required when called: 1
   535 ;; This function calls:
   536 ;;		Nothing
   537 ;; This function is called by:
   538 ;;		_SYSTEM_Initialize
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           	psect	text5
   543  0042B4                     __ptext5:
   544                           	callstack 0
   545  0042B4                     _OSCILLATOR_Initialize:
   546                           	callstack 28
   547  0042B4                     
   548                           ;mcu.c: 83:     OSCCON1 = 0x62;
   549  0042B4  0E62               	movlw	98
   550  0042B6  0139               	movlb	57	; () banked
   551  0042B8  6FD9               	movwf	217,b	;volatile
   552                           
   553                           ;mcu.c: 85:     OSCCON3 = 0x00;
   554  0042BA  0E00               	movlw	0
   555  0042BC  6FDB               	movwf	219,b	;volatile
   556                           
   557                           ;mcu.c: 87:     OSCEN = 0x00;
   558  0042BE  0E00               	movlw	0
   559  0042C0  6FDD               	movwf	221,b	;volatile
   560                           
   561                           ;mcu.c: 89:     OSCFRQ = 0x06;
   562  0042C2  0E06               	movlw	6
   563  0042C4  6FDF               	movwf	223,b	;volatile
   564                           
   565                           ;mcu.c: 91:     OSCTUNE = 0x00;
   566  0042C6  0E00               	movlw	0
   567  0042C8  6FDE               	movwf	222,b	;volatile
   568  0042CA                     
   569                           ; BSR set to: 57
   570  0042CA  0012               	return		;funcret
   571  0042CC                     __end_of_OSCILLATOR_Initialize:
   572                           	callstack 0
   573                           
   574 ;; *************** function _MCU_Initialize *****************
   575 ;; Defined at:
   576 ;;		line 53 in file "mcu.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;		None
   579 ;; Auto vars:     Size  Location     Type
   580 ;;		None
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, status,2
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   590 ;;      Params:         0       0       0       0       0       0       0       0       0
   591 ;;      Locals:         0       0       0       0       0       0       0       0       0
   592 ;;      Temps:          0       0       0       0       0       0       0       0       0
   593 ;;      Totals:         0       0       0       0       0       0       0       0       0
   594 ;;Total ram usage:        0 bytes
   595 ;; Hardware stack levels used: 1
   596 ;; Hardware stack levels required when called: 1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_SYSTEM_Initialize
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text6
   605  004216                     __ptext6:
   606                           	callstack 0
   607  004216                     _MCU_Initialize:
   608                           	callstack 28
   609  004216                     
   610                           ;mcu.c: 55:     ANSELA = 0x00;
   611  004216  0E00               	movlw	0
   612  004218  013A               	movlb	58	; () banked
   613  00421A  6F40               	movwf	64,b	;volatile
   614                           
   615                           ;mcu.c: 56:     ANSELB = 0x00;
   616  00421C  0E00               	movlw	0
   617  00421E  6F50               	movwf	80,b	;volatile
   618                           
   619                           ;mcu.c: 57:     ANSELC = 0x00;
   620  004220  0E00               	movlw	0
   621  004222  6F60               	movwf	96,b	;volatile
   622                           
   623                           ;mcu.c: 60:     TRISA = 0x00;
   624  004224  0E00               	movlw	0
   625  004226  6EC2               	movwf	194,c	;volatile
   626                           
   627                           ;mcu.c: 61:     TRISB = 0x00;
   628  004228  0E00               	movlw	0
   629  00422A  6EC3               	movwf	195,c	;volatile
   630                           
   631                           ;mcu.c: 62:     TRISC = 0x00;
   632  00422C  0E00               	movlw	0
   633  00422E  6EC4               	movwf	196,c	;volatile
   634                           
   635                           ;mcu.c: 65:     LATA = 0x00;
   636  004230  0E00               	movlw	0
   637  004232  6EBA               	movwf	186,c	;volatile
   638                           
   639                           ;mcu.c: 66:     LATB = 0x00;
   640  004234  0E00               	movlw	0
   641  004236  6EBB               	movwf	187,c	;volatile
   642                           
   643                           ;mcu.c: 67:     LATC = 0x00;
   644  004238  0E00               	movlw	0
   645  00423A  6EBC               	movwf	188,c	;volatile
   646                           
   647                           ;mcu.c: 68:     PORTA = 0x00;
   648  00423C  0E00               	movlw	0
   649  00423E  6ECA               	movwf	202,c	;volatile
   650                           
   651                           ;mcu.c: 69:     PORTB = 0x00;
   652  004240  0E00               	movlw	0
   653  004242  6ECB               	movwf	203,c	;volatile
   654                           
   655                           ;mcu.c: 70:     PORTC = 0x00;
   656  004244  0E00               	movlw	0
   657  004246  6ECC               	movwf	204,c	;volatile
   658  004248                     
   659                           ; BSR set to: 58
   660  004248  0012               	return		;funcret
   661  00424A                     __end_of_MCU_Initialize:
   662                           	callstack 0
   663                           
   664 ;; *************** function _IO_LEDHello *****************
   665 ;; Defined at:
   666 ;;		line 102 in file "mcu.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  LED_COUNTER     1    5[COMRAM] unsigned char 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   680 ;;      Params:         0       0       0       0       0       0       0       0       0
   681 ;;      Locals:         1       0       0       0       0       0       0       0       0
   682 ;;      Temps:          2       0       0       0       0       0       0       0       0
   683 ;;      Totals:         3       0       0       0       0       0       0       0       0
   684 ;;Total ram usage:        3 bytes
   685 ;; Hardware stack levels used: 1
   686 ;; Hardware stack levels required when called: 2
   687 ;; This function calls:
   688 ;;		_IO_LEDPrintChar
   689 ;; This function is called by:
   690 ;;		_SYSTEM_Initialize
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           	psect	text7
   695  0041B0                     __ptext7:
   696                           	callstack 0
   697  0041B0                     _IO_LEDHello:
   698                           	callstack 27
   699  0041B0                     
   700                           ;mcu.c: 103:     uint8_t LED_COUNTER;;mcu.c: 104:     for(LED_COUNTER=1; LED_COUNTER<5; 
      +                          LED_COUNTER++){
   701  0041B0  0E01               	movlw	1
   702  0041B2  6E06               	movwf	IO_LEDHello@LED_COUNTER^0,c
   703  0041B4                     l917:
   704                           
   705                           ;mcu.c: 105:         IO_LEDPrintChar(LED_COUNTER);
   706  0041B4  5006               	movf	IO_LEDHello@LED_COUNTER^0,w,c
   707  0041B6  EC56  F020         	call	_IO_LEDPrintChar
   708  0041BA                     
   709                           ;mcu.c: 106:         _delay((unsigned long)((250)*(8000000/4000.0)));
   710  0041BA  0E03               	movlw	3
   711  0041BC  6E05               	movwf	(??_IO_LEDHello+1)^0,c
   712  0041BE  0E8A               	movlw	138
   713  0041C0  6E04               	movwf	??_IO_LEDHello^0,c
   714  0041C2  0E56               	movlw	86
   715  0041C4                     u77:
   716  0041C4  2EE8               	decfsz	wreg,f,c
   717  0041C6  D7FE               	bra	u77
   718  0041C8  2E04               	decfsz	??_IO_LEDHello^0,f,c
   719  0041CA  D7FC               	bra	u77
   720  0041CC  2E05               	decfsz	(??_IO_LEDHello+1)^0,f,c
   721  0041CE  D7FA               	bra	u77
   722  0041D0                     
   723                           ;mcu.c: 107:     }
   724  0041D0  2A06               	incf	IO_LEDHello@LED_COUNTER^0,f,c
   725  0041D2  0E04               	movlw	4
   726  0041D4  6406               	cpfsgt	IO_LEDHello@LED_COUNTER^0,c
   727  0041D6  EFEF  F020         	goto	u11
   728  0041DA  EFF1  F020         	goto	u10
   729  0041DE                     u11:
   730  0041DE  EFDA  F020         	goto	l917
   731  0041E2                     u10:
   732  0041E2                     
   733                           ;mcu.c: 108:     for(LED_COUNTER=4; LED_COUNTER>0; LED_COUNTER--){
   734  0041E2  0E04               	movlw	4
   735  0041E4  6E06               	movwf	IO_LEDHello@LED_COUNTER^0,c
   736  0041E6                     l929:
   737                           
   738                           ;mcu.c: 109:         IO_LEDPrintChar(LED_COUNTER);
   739  0041E6  5006               	movf	IO_LEDHello@LED_COUNTER^0,w,c
   740  0041E8  EC56  F020         	call	_IO_LEDPrintChar
   741  0041EC                     
   742                           ;mcu.c: 110:         _delay((unsigned long)((250)*(8000000/4000.0)));
   743  0041EC  0E03               	movlw	3
   744  0041EE  6E05               	movwf	(??_IO_LEDHello+1)^0,c
   745  0041F0  0E8A               	movlw	138
   746  0041F2  6E04               	movwf	??_IO_LEDHello^0,c
   747  0041F4  0E56               	movlw	86
   748  0041F6                     u87:
   749  0041F6  2EE8               	decfsz	wreg,f,c
   750  0041F8  D7FE               	bra	u87
   751  0041FA  2E04               	decfsz	??_IO_LEDHello^0,f,c
   752  0041FC  D7FC               	bra	u87
   753  0041FE  2E05               	decfsz	(??_IO_LEDHello+1)^0,f,c
   754  004200  D7FA               	bra	u87
   755  004202                     
   756                           ;mcu.c: 111:     }
   757  004202  0606               	decf	IO_LEDHello@LED_COUNTER^0,f,c
   758  004204  5006               	movf	IO_LEDHello@LED_COUNTER^0,w,c
   759  004206  A4D8               	btfss	status,2,c
   760  004208  EF08  F021         	goto	u21
   761  00420C  EF0A  F021         	goto	u20
   762  004210                     u21:
   763  004210  EFF3  F020         	goto	l929
   764  004214                     u20:
   765  004214  0012               	return		;funcret
   766  004216                     __end_of_IO_LEDHello:
   767                           	callstack 0
   768                           
   769 ;; *************** function _IO_LEDPrintChar *****************
   770 ;; Defined at:
   771 ;;		line 122 in file "mcu.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;  LEDCHAR         1    wreg     unsigned char 
   774 ;; Auto vars:     Size  Location     Type
   775 ;;  LEDCHAR         1    2[COMRAM] unsigned char 
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   785 ;;      Params:         0       0       0       0       0       0       0       0       0
   786 ;;      Locals:         1       0       0       0       0       0       0       0       0
   787 ;;      Temps:          2       0       0       0       0       0       0       0       0
   788 ;;      Totals:         3       0       0       0       0       0       0       0       0
   789 ;;Total ram usage:        3 bytes
   790 ;; Hardware stack levels used: 1
   791 ;; Hardware stack levels required when called: 1
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_SYSTEM_Initialize
   796 ;;		_IO_LEDHello
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           	psect	text8
   801  0040AC                     __ptext8:
   802                           	callstack 0
   803  0040AC                     _IO_LEDPrintChar:
   804                           	callstack 28
   805                           
   806                           ;incstack = 0
   807                           ;IO_LEDPrintChar@LEDCHAR stored from wreg
   808  0040AC  6E03               	movwf	IO_LEDPrintChar@LEDCHAR^0,c
   809  0040AE                     
   810                           ;mcu.c: 123:     switch(LEDCHAR){
   811  0040AE  EF7D  F020         	goto	l885
   812  0040B2                     l110:
   813  0040B2  94BC               	bcf	188,2,c	;volatile
   814  0040B4  96BC               	bcf	188,3,c	;volatile
   815  0040B6  98BC               	bcf	188,4,c	;volatile
   816  0040B8  9ABC               	bcf	188,5,c	;volatile
   817  0040BA  EF9E  F020         	goto	l164
   818  0040BE                     l120:
   819  0040BE  84BC               	bsf	188,2,c	;volatile
   820  0040C0  96BC               	bcf	188,3,c	;volatile
   821  0040C2  98BC               	bcf	188,4,c	;volatile
   822  0040C4  9ABC               	bcf	188,5,c	;volatile
   823  0040C6  EF9E  F020         	goto	l164
   824  0040CA                     l129:
   825  0040CA  94BC               	bcf	188,2,c	;volatile
   826  0040CC  86BC               	bsf	188,3,c	;volatile
   827  0040CE  98BC               	bcf	188,4,c	;volatile
   828  0040D0  9ABC               	bcf	188,5,c	;volatile
   829  0040D2  EF9E  F020         	goto	l164
   830  0040D6                     l138:
   831  0040D6  94BC               	bcf	188,2,c	;volatile
   832  0040D8  96BC               	bcf	188,3,c	;volatile
   833  0040DA  88BC               	bsf	188,4,c	;volatile
   834  0040DC  9ABC               	bcf	188,5,c	;volatile
   835  0040DE  EF9E  F020         	goto	l164
   836  0040E2                     l147:
   837  0040E2  94BC               	bcf	188,2,c	;volatile
   838  0040E4  96BC               	bcf	188,3,c	;volatile
   839  0040E6  98BC               	bcf	188,4,c	;volatile
   840  0040E8  8ABC               	bsf	188,5,c	;volatile
   841  0040EA  EF9E  F020         	goto	l164
   842  0040EE                     l156:
   843  0040EE  94BC               	bcf	188,2,c	;volatile
   844  0040F0  96BC               	bcf	188,3,c	;volatile
   845  0040F2  98BC               	bcf	188,4,c	;volatile
   846  0040F4  9ABC               	bcf	188,5,c	;volatile
   847  0040F6  EF9E  F020         	goto	l164
   848  0040FA                     l885:
   849  0040FA  5003               	movf	IO_LEDPrintChar@LEDCHAR^0,w,c
   850  0040FC  6E01               	movwf	??_IO_LEDPrintChar^0,c
   851  0040FE  6A02               	clrf	(??_IO_LEDPrintChar+1)^0,c
   852                           
   853                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   854                           ; Switch size 1, requested type "simple"
   855                           ; Number of cases is 1, Range of values is 0 to 0
   856                           ; switch strategies available:
   857                           ; Name         Instructions Cycles
   858                           ; simple_byte            4     3 (average)
   859                           ;	Chosen strategy is simple_byte
   860  004100  5002               	movf	(??_IO_LEDPrintChar+1)^0,w,c
   861  004102  0A00               	xorlw	0	; case 0
   862  004104  B4D8               	btfsc	status,2,c
   863  004106  EF87  F020         	goto	l985
   864  00410A  EF77  F020         	goto	l156
   865  00410E                     l985:
   866                           
   867                           ; Switch size 1, requested type "simple"
   868                           ; Number of cases is 5, Range of values is 0 to 4
   869                           ; switch strategies available:
   870                           ; Name         Instructions Cycles
   871                           ; simple_byte           16     9 (average)
   872                           ;	Chosen strategy is simple_byte
   873  00410E  5001               	movf	??_IO_LEDPrintChar^0,w,c
   874  004110  0A00               	xorlw	0	; case 0
   875  004112  B4D8               	btfsc	status,2,c
   876  004114  EF59  F020         	goto	l110
   877  004118  0A01               	xorlw	1	; case 1
   878  00411A  B4D8               	btfsc	status,2,c
   879  00411C  EF5F  F020         	goto	l120
   880  004120  0A03               	xorlw	3	; case 2
   881  004122  B4D8               	btfsc	status,2,c
   882  004124  EF65  F020         	goto	l129
   883  004128  0A01               	xorlw	1	; case 3
   884  00412A  B4D8               	btfsc	status,2,c
   885  00412C  EF6B  F020         	goto	l138
   886  004130  0A07               	xorlw	7	; case 4
   887  004132  B4D8               	btfsc	status,2,c
   888  004134  EF71  F020         	goto	l147
   889  004138  EF77  F020         	goto	l156
   890  00413C                     l164:
   891  00413C  0012               	return		;funcret
   892  00413E                     __end_of_IO_LEDPrintChar:
   893                           	callstack 0
   894                           
   895 ;; *************** function _INTERRUPT_GlobalInterruptEnable *****************
   896 ;; Defined at:
   897 ;;		line 18 in file "isr_manager.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, status,2
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   911 ;;      Params:         0       0       0       0       0       0       0       0       0
   912 ;;      Locals:         0       0       0       0       0       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0       0       0       0       0
   914 ;;      Totals:         0       0       0       0       0       0       0       0       0
   915 ;;Total ram usage:        0 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; Hardware stack levels required when called: 1
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_SYSTEM_Initialize
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text9
   926  0042CC                     __ptext9:
   927                           	callstack 0
   928  0042CC                     _INTERRUPT_GlobalInterruptEnable:
   929                           	callstack 28
   930  0042CC                     
   931                           ;isr_manager.c: 20:     INTCON0bits.IPEN = 1;
   932  0042CC  8AD2               	bsf	210,5,c	;volatile
   933                           
   934                           ;isr_manager.c: 25:     IPR3bits.TMR0IP = 0;
   935  0042CE  0139               	movlb	57	; () banked
   936  0042D0  9F83               	bcf	131,7,b	;volatile
   937                           
   938                           ;isr_manager.c: 27:     (INTCON0bits.GIEH = 1);
   939  0042D2  8ED2               	bsf	210,7,c	;volatile
   940                           
   941                           ;isr_manager.c: 28:     (INTCON0bits.GIEL = 1);
   942  0042D4  8CD2               	bsf	210,6,c	;volatile
   943  0042D6                     
   944                           ; BSR set to: 57
   945                           ;isr_manager.c: 31:     IVTBASEU = 0x00;
   946  0042D6  0E00               	movlw	0
   947  0042D8  6ED7               	movwf	215,c	;volatile
   948                           
   949                           ;isr_manager.c: 32:     IVTBASEH = 0x40;
   950  0042DA  0E40               	movlw	64
   951  0042DC  6ED6               	movwf	214,c	;volatile
   952                           
   953                           ;isr_manager.c: 33:     IVTBASEL = 0x08;
   954  0042DE  0E08               	movlw	8
   955  0042E0  6ED5               	movwf	213,c	;volatile
   956  0042E2                     
   957                           ; BSR set to: 57
   958  0042E2  0012               	return		;funcret
   959  0042E4                     __end_of_INTERRUPT_GlobalInterruptEnable:
   960                           	callstack 0
   961                           
   962 ;; *************** function _TMR0_ISR *****************
   963 ;; Defined at:
   964 ;;		line 58 in file "isr_manager.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;		None
   967 ;; Auto vars:     Size  Location     Type
   968 ;;		None
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      void 
   971 ;; Registers used:
   972 ;;		wreg, status,2
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   978 ;;      Params:         0       0       0       0       0       0       0       0       0
   979 ;;      Locals:         0       0       0       0       0       0       0       0       0
   980 ;;      Temps:          0       0       0       0       0       0       0       0       0
   981 ;;      Totals:         0       0       0       0       0       0       0       0       0
   982 ;;Total ram usage:        0 bytes
   983 ;; Hardware stack levels used: 1
   984 ;; This function calls:
   985 ;;		Nothing
   986 ;; This function is called by:
   987 ;;		Interrupt level 2
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text10
   992  0042E4                     __ptext10:
   993                           	callstack 0
   994  0042E4                     _TMR0_ISR:
   995                           	callstack 27
   996  0042E4                     
   997                           ;isr_manager.c: 59:     PIR3bits.TMR0IF = 0;
   998  0042E4  0139               	movlb	57	; () banked
   999  0042E6  9FA3               	bcf	163,7,b	;volatile
  1000  0042E8                     
  1001                           ; BSR set to: 57
  1002                           ;isr_manager.c: 60:     TIMER0_OVR_FLAG = 1;
  1003  0042E8  0E01               	movlw	1
  1004  0042EA  6E09               	movwf	_TIMER0_OVR_FLAG^0,c
  1005                           
  1006                           ;isr_manager.c: 61:     ((void)(TMR0H=((59286)>>8),TMR0L=((59286)&0xFF)));
  1007  0042EC  0EE7               	movlw	231
  1008  0042EE  6EB7               	movwf	183,c	;volatile
  1009  0042F0  0E96               	movlw	150
  1010  0042F2  6EB6               	movwf	182,c	;volatile
  1011  0042F4                     
  1012                           ; BSR set to: 57
  1013  0042F4  0011               	retfie		f
  1014  0042F6                     __end_of_TMR0_ISR:
  1015                           	callstack 0
  1016                           
  1017                           ;
  1018                           ; Interrupt Vector Table @ 0x4008
  1019                           ;
  1020                           
  1021                           	psect	ivt0x4008
  1022  004008                     __pivt0x4008:
  1023                           	callstack 0
  1024  004008                     ivt0x4008_base:
  1025                           	callstack 0
  1026                           
  1027                           ; Vector 0 : SWINT
  1028  004008  1029               	dw	ivt0x4008_undefint shr (0+2)
  1029                           
  1030                           ; Vector 1 : HLVD
  1031  00400A  1029               	dw	ivt0x4008_undefint shr (0+2)
  1032                           
  1033                           ; Vector 2 : OSF
  1034  00400C  1029               	dw	ivt0x4008_undefint shr (0+2)
  1035                           
  1036                           ; Vector 3 : CSW
  1037  00400E  1029               	dw	ivt0x4008_undefint shr (0+2)
  1038                           
  1039                           ; Vector 4 : NVM
  1040  004010  1029               	dw	ivt0x4008_undefint shr (0+2)
  1041                           
  1042                           ; Vector 5 : SCAN
  1043  004012  1029               	dw	ivt0x4008_undefint shr (0+2)
  1044                           
  1045                           ; Vector 6 : CRC
  1046  004014  1029               	dw	ivt0x4008_undefint shr (0+2)
  1047                           
  1048                           ; Vector 7 : IOC
  1049  004016  1029               	dw	ivt0x4008_undefint shr (0+2)
  1050                           
  1051                           ; Vector 8 : INT0
  1052  004018  1029               	dw	ivt0x4008_undefint shr (0+2)
  1053                           
  1054                           ; Vector 9 : ZCD
  1055  00401A  1029               	dw	ivt0x4008_undefint shr (0+2)
  1056                           
  1057                           ; Vector 10 : AD
  1058  00401C  1029               	dw	ivt0x4008_undefint shr (0+2)
  1059                           
  1060                           ; Vector 11 : ADT
  1061  00401E  1029               	dw	ivt0x4008_undefint shr (0+2)
  1062                           
  1063                           ; Vector 12 : CMP1
  1064  004020  1029               	dw	ivt0x4008_undefint shr (0+2)
  1065                           
  1066                           ; Vector 13 : SMT1
  1067  004022  1029               	dw	ivt0x4008_undefint shr (0+2)
  1068                           
  1069                           ; Vector 14 : SMT1PRA
  1070  004024  1029               	dw	ivt0x4008_undefint shr (0+2)
  1071                           
  1072                           ; Vector 15 : SMT1PWA
  1073  004026  1029               	dw	ivt0x4008_undefint shr (0+2)
  1074                           
  1075                           ; Vector 16 : DMA1SCNT
  1076  004028  1029               	dw	ivt0x4008_undefint shr (0+2)
  1077                           
  1078                           ; Vector 17 : DMA1DCNT
  1079  00402A  1029               	dw	ivt0x4008_undefint shr (0+2)
  1080                           
  1081                           ; Vector 18 : DMA1OR
  1082  00402C  1029               	dw	ivt0x4008_undefint shr (0+2)
  1083                           
  1084                           ; Vector 19 : DMA1A
  1085  00402E  1029               	dw	ivt0x4008_undefint shr (0+2)
  1086                           
  1087                           ; Vector 20 : SPI1RX
  1088  004030  1029               	dw	ivt0x4008_undefint shr (0+2)
  1089                           
  1090                           ; Vector 21 : SPI1TX
  1091  004032  1029               	dw	ivt0x4008_undefint shr (0+2)
  1092                           
  1093                           ; Vector 22 : SPI1
  1094  004034  1029               	dw	ivt0x4008_undefint shr (0+2)
  1095                           
  1096                           ; Vector 23 : I2C1RX
  1097  004036  1029               	dw	ivt0x4008_undefint shr (0+2)
  1098                           
  1099                           ; Vector 24 : I2C1TX
  1100  004038  1029               	dw	ivt0x4008_undefint shr (0+2)
  1101                           
  1102                           ; Vector 25 : I2C1
  1103  00403A  1029               	dw	ivt0x4008_undefint shr (0+2)
  1104                           
  1105                           ; Vector 26 : I2C1E
  1106  00403C  1029               	dw	ivt0x4008_undefint shr (0+2)
  1107                           
  1108                           ; Vector 27 : U1RX
  1109  00403E  1029               	dw	ivt0x4008_undefint shr (0+2)
  1110                           
  1111                           ; Vector 28 : U1TX
  1112  004040  1029               	dw	ivt0x4008_undefint shr (0+2)
  1113                           
  1114                           ; Vector 29 : U1E
  1115  004042  1029               	dw	ivt0x4008_undefint shr (0+2)
  1116                           
  1117                           ; Vector 30 : U1
  1118  004044  1029               	dw	ivt0x4008_undefint shr (0+2)
  1119                           
  1120                           ; Vector 31 : TMR0
  1121  004046  10B9               	dw	_TMR0_ISR shr (0+2)
  1122                           
  1123                           ; Vector 32 : TMR1
  1124  004048  1029               	dw	ivt0x4008_undefint shr (0+2)
  1125                           
  1126                           ; Vector 33 : TMR1G
  1127  00404A  1029               	dw	ivt0x4008_undefint shr (0+2)
  1128                           
  1129                           ; Vector 34 : TMR2
  1130  00404C  1029               	dw	ivt0x4008_undefint shr (0+2)
  1131                           
  1132                           ; Vector 35 : CCP1
  1133  00404E  1029               	dw	ivt0x4008_undefint shr (0+2)
  1134                           
  1135                           ; Vector 36 : NCO1
  1136  004050  1029               	dw	ivt0x4008_undefint shr (0+2)
  1137                           
  1138                           ; Vector 37 : CWG1
  1139  004052  1029               	dw	ivt0x4008_undefint shr (0+2)
  1140                           
  1141                           ; Vector 38 : CLC1
  1142  004054  1029               	dw	ivt0x4008_undefint shr (0+2)
  1143                           
  1144                           ; Vector 39 : INT1
  1145  004056  1029               	dw	ivt0x4008_undefint shr (0+2)
  1146                           
  1147                           ; Vector 40 : RXB0IF
  1148  004058  1029               	dw	ivt0x4008_undefint shr (0+2)
  1149                           
  1150                           ; Vector 41 : RXB1IF
  1151  00405A  1029               	dw	ivt0x4008_undefint shr (0+2)
  1152                           
  1153                           ; Vector 42 : TXB0IF
  1154  00405C  1029               	dw	ivt0x4008_undefint shr (0+2)
  1155                           
  1156                           ; Vector 43 : TXB1IF
  1157  00405E  1029               	dw	ivt0x4008_undefint shr (0+2)
  1158                           
  1159                           ; Vector 44 : TXB2IF
  1160  004060  1029               	dw	ivt0x4008_undefint shr (0+2)
  1161                           
  1162                           ; Vector 45 : ERRIF
  1163  004062  1029               	dw	ivt0x4008_undefint shr (0+2)
  1164                           
  1165                           ; Vector 46 : WAKIF
  1166  004064  1029               	dw	ivt0x4008_undefint shr (0+2)
  1167                           
  1168                           ; Vector 47 : IRXIF
  1169  004066  1029               	dw	ivt0x4008_undefint shr (0+2)
  1170                           
  1171                           ; Vector 48 : CMP2
  1172  004068  1029               	dw	ivt0x4008_undefint shr (0+2)
  1173                           
  1174                           ; Vector 49 : SMT2
  1175  00406A  1029               	dw	ivt0x4008_undefint shr (0+2)
  1176                           
  1177                           ; Vector 50 : SMT2PRA
  1178  00406C  1029               	dw	ivt0x4008_undefint shr (0+2)
  1179                           
  1180                           ; Vector 51 : SMT2PWA
  1181  00406E  1029               	dw	ivt0x4008_undefint shr (0+2)
  1182                           
  1183                           ; Vector 52 : DMA2SCNT
  1184  004070  1029               	dw	ivt0x4008_undefint shr (0+2)
  1185                           
  1186                           ; Vector 53 : DMA2DCNT
  1187  004072  1029               	dw	ivt0x4008_undefint shr (0+2)
  1188                           
  1189                           ; Vector 54 : DMA2OR
  1190  004074  1029               	dw	ivt0x4008_undefint shr (0+2)
  1191                           
  1192                           ; Vector 55 : DMA2A
  1193  004076  1029               	dw	ivt0x4008_undefint shr (0+2)
  1194                           
  1195                           ; Vector 56 : I2C2RX
  1196  004078  1029               	dw	ivt0x4008_undefint shr (0+2)
  1197                           
  1198                           ; Vector 57 : I2C2TX
  1199  00407A  1029               	dw	ivt0x4008_undefint shr (0+2)
  1200                           
  1201                           ; Vector 58 : I2C2
  1202  00407C  1029               	dw	ivt0x4008_undefint shr (0+2)
  1203                           
  1204                           ; Vector 59 : I2C2E
  1205  00407E  1029               	dw	ivt0x4008_undefint shr (0+2)
  1206                           
  1207                           ; Vector 60 : U2RX
  1208  004080  1029               	dw	ivt0x4008_undefint shr (0+2)
  1209                           
  1210                           ; Vector 61 : U2TX
  1211  004082  1029               	dw	ivt0x4008_undefint shr (0+2)
  1212                           
  1213                           ; Vector 62 : U2E
  1214  004084  1029               	dw	ivt0x4008_undefint shr (0+2)
  1215                           
  1216                           ; Vector 63 : U2
  1217  004086  1029               	dw	ivt0x4008_undefint shr (0+2)
  1218                           
  1219                           ; Vector 64 : TMR3
  1220  004088  1029               	dw	ivt0x4008_undefint shr (0+2)
  1221                           
  1222                           ; Vector 65 : TMR3G
  1223  00408A  1029               	dw	ivt0x4008_undefint shr (0+2)
  1224                           
  1225                           ; Vector 66 : TMR4
  1226  00408C  1029               	dw	ivt0x4008_undefint shr (0+2)
  1227                           
  1228                           ; Vector 67 : CCP2
  1229  00408E  1029               	dw	ivt0x4008_undefint shr (0+2)
  1230                           
  1231                           ; Vector 68 : CWG2
  1232  004090  1029               	dw	ivt0x4008_undefint shr (0+2)
  1233                           
  1234                           ; Vector 69 : CLC2
  1235  004092  1029               	dw	ivt0x4008_undefint shr (0+2)
  1236                           
  1237                           ; Vector 70 : INT2
  1238  004094  1029               	dw	ivt0x4008_undefint shr (0+2)
  1239                           
  1240                           ; Vector 71 : TMR5
  1241  004096  1029               	dw	ivt0x4008_undefint shr (0+2)
  1242                           
  1243                           ; Vector 72 : TMR5G
  1244  004098  1029               	dw	ivt0x4008_undefint shr (0+2)
  1245                           
  1246                           ; Vector 73 : TMR6
  1247  00409A  1029               	dw	ivt0x4008_undefint shr (0+2)
  1248                           
  1249                           ; Vector 74 : CCP3
  1250  00409C  1029               	dw	ivt0x4008_undefint shr (0+2)
  1251                           
  1252                           ; Vector 75 : CWG3
  1253  00409E  1029               	dw	ivt0x4008_undefint shr (0+2)
  1254                           
  1255                           ; Vector 76 : CLC3
  1256  0040A0  1029               	dw	ivt0x4008_undefint shr (0+2)
  1257                           
  1258                           ; Vector 77 : CCP4
  1259  0040A2  1029               	dw	ivt0x4008_undefint shr (0+2)
  1260                           
  1261                           ; Vector 78 : CLC4
  1262  0040A4  1029               	dw	ivt0x4008_undefint shr (0+2)
  1263  0040A6                     ivt0x4008_undefint:
  1264                           	callstack 0
  1265  0040A6  00FF               	reset	
  1266  0000                     
  1267                           	psect	rparam
  1268  0000                     
  1269                           	psect	idloc
  1270                           
  1271                           ;Config register IDLOC0 @ 0x200000
  1272                           ;	unspecified, using default values
  1273  200000                     	org	2097152
  1274  200000  0FFF               	dw	4095
  1275                           
  1276                           ;Config register IDLOC1 @ 0x200002
  1277                           ;	unspecified, using default values
  1278  200002                     	org	2097154
  1279  200002  0FFF               	dw	4095
  1280                           
  1281                           ;Config register IDLOC2 @ 0x200004
  1282                           ;	unspecified, using default values
  1283  200004                     	org	2097156
  1284  200004  0FFF               	dw	4095
  1285                           
  1286                           ;Config register IDLOC3 @ 0x200006
  1287                           ;	unspecified, using default values
  1288  200006                     	org	2097158
  1289  200006  0FFF               	dw	4095
  1290                           
  1291                           ;Config register IDLOC4 @ 0x200008
  1292                           ;	unspecified, using default values
  1293  200008                     	org	2097160
  1294  200008  0FFF               	dw	4095
  1295                           
  1296                           ;Config register IDLOC5 @ 0x20000A
  1297                           ;	unspecified, using default values
  1298  20000A                     	org	2097162
  1299  20000A  0FFF               	dw	4095
  1300                           
  1301                           ;Config register IDLOC6 @ 0x20000C
  1302                           ;	unspecified, using default values
  1303  20000C                     	org	2097164
  1304  20000C  0FFF               	dw	4095
  1305                           
  1306                           ;Config register IDLOC7 @ 0x20000E
  1307                           ;	unspecified, using default values
  1308  20000E                     	org	2097166
  1309  20000E  0FFF               	dw	4095
  1310                           
  1311                           	psect	config
  1312                           
  1313                           ;Config register CONFIG1L @ 0x300000
  1314                           ;	External Oscillator Selection
  1315                           ;	FEXTOSC = OFF, Oscillator not enabled
  1316                           ;	Reset Oscillator Selection
  1317                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  1318  300000                     	org	3145728
  1319  300000  EC                 	db	236
  1320                           
  1321                           ;Config register CONFIG1H @ 0x300001
  1322                           ;	Clock out Enable bit
  1323                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1324                           ;	PRLOCKED One-Way Set Enable bit
  1325                           ;	PR1WAY = OFF, PRLOCK bit can be set and cleared repeatedly
  1326                           ;	Clock Switch Enable bit
  1327                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1328                           ;	Fail-Safe Clock Monitor Enable bit
  1329                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1330  300001                     	org	3145729
  1331  300001  FD                 	db	253
  1332                           
  1333                           ;Config register CONFIG2L @ 0x300002
  1334                           ;	MCLR Enable bit
  1335                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1336                           ;	Power-up timer selection bits
  1337                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1338                           ;	Multi-vector enable bit
  1339                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1340                           ;	IVTLOCK bit One-way set enable bit
  1341                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1342                           ;	Low Power BOR Enable bit
  1343                           ;	LPBOREN = OFF, ULPBOR disabled
  1344                           ;	Brown-out Reset Enable bits
  1345                           ;	BOREN = OFF, Brown-out Reset disabled
  1346  300002                     	org	3145730
  1347  300002  3F                 	db	63
  1348                           
  1349                           ;Config register CONFIG2H @ 0x300003
  1350                           ;	Brown-out Reset Voltage Selection bits
  1351                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1352                           ;	ZCD Disable bit
  1353                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1354                           ;	PPSLOCK bit One-Way Set Enable bit
  1355                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1356                           ;	Stack Full/Underflow Reset Enable bit
  1357                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1358                           ;	Debugger Enable bit
  1359                           ;	DEBUG = OFF, Background debugger disabled
  1360                           ;	Extended Instruction Set Enable bit
  1361                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1362  300003                     	org	3145731
  1363  300003  FF                 	db	255
  1364                           
  1365                           ;Config register CONFIG3L @ 0x300004
  1366                           ;	WDT Period selection bits
  1367                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1368                           ;	WDT operating mode
  1369                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1370  300004                     	org	3145732
  1371  300004  9F                 	db	159
  1372                           
  1373                           ;Config register CONFIG3H @ 0x300005
  1374                           ;	WDT Window Select bits
  1375                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1376                           ;	WDT input clock selector
  1377                           ;	WDTCCS = SC, Software Control
  1378  300005                     	org	3145733
  1379  300005  FF                 	db	255
  1380                           
  1381                           ;Config register CONFIG4L @ 0x300006
  1382                           ;	Boot Block Size selection bits
  1383                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1384                           ;	Boot Block enable bit
  1385                           ;	BBEN = OFF, Boot block disabled
  1386                           ;	Storage Area Flash enable bit
  1387                           ;	SAFEN = OFF, SAF disabled
  1388                           ;	Application Block write protection bit
  1389                           ;	WRTAPP = OFF, Application Block not write protected
  1390  300006                     	org	3145734
  1391  300006  FF                 	db	255
  1392                           
  1393                           ;Config register CONFIG4H @ 0x300007
  1394                           ;	Configuration Register Write Protection bit
  1395                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
  1396                           ;	Boot Block Write Protection bit
  1397                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
  1398                           ;	Data EEPROM Write Protection bit
  1399                           ;	WRTD = OFF, Data EEPROM not write-protected
  1400                           ;	SAF Write protection bit
  1401                           ;	WRTSAF = OFF, SAF not Write Protected
  1402                           ;	Low Voltage Programming Enable bit
  1403                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  1404  300007                     	org	3145735
  1405  300007  DF                 	db	223
  1406                           
  1407                           ;Config register CONFIG5L @ 0x300008
  1408                           ;	PFM and Data EEPROM Code Protection bit
  1409                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1410  300008                     	org	3145736
  1411  300008  FF                 	db	255
  1412                           
  1413                           ;Config register CONFIG5H @ 0x300009
  1414                           ;	unspecified, using default values
  1415  300009                     	org	3145737
  1416  300009  FF                 	db	255
  1417                           tosu	equ	0x3FFF
  1418                           tosh	equ	0x3FFE
  1419                           tosl	equ	0x3FFD
  1420                           stkptr	equ	0x3FFC
  1421                           pclatu	equ	0x3FFB
  1422                           pclath	equ	0x3FFA
  1423                           pcl	equ	0x3FF9
  1424                           tblptru	equ	0x3FF8
  1425                           tblptrh	equ	0x3FF7
  1426                           tblptrl	equ	0x3FF6
  1427                           tablat	equ	0x3FF5
  1428                           prodh	equ	0x3FF4
  1429                           prodl	equ	0x3FF3
  1430                           indf0	equ	0x3FEF
  1431                           postinc0	equ	0x3FEE
  1432                           postdec0	equ	0x3FED
  1433                           preinc0	equ	0x3FEC
  1434                           plusw0	equ	0x3FEB
  1435                           fsr0h	equ	0x3FEA
  1436                           fsr0l	equ	0x3FE9
  1437                           wreg	equ	0x3FE8
  1438                           indf1	equ	0x3FE7
  1439                           postinc1	equ	0x3FE6
  1440                           postdec1	equ	0x3FE5
  1441                           preinc1	equ	0x3FE4
  1442                           plusw1	equ	0x3FE3
  1443                           fsr1h	equ	0x3FE2
  1444                           fsr1l	equ	0x3FE1
  1445                           bsr	equ	0x3FE0
  1446                           indf2	equ	0x3FDF
  1447                           postinc2	equ	0x3FDE
  1448                           postdec2	equ	0x3FDD
  1449                           preinc2	equ	0x3FDC
  1450                           plusw2	equ	0x3FDB
  1451                           fsr2h	equ	0x3FDA
  1452                           fsr2l	equ	0x3FD9
  1453                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       9
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _SYSTEM_Process->_RTCC_Update
    _SYSTEM_Initialize->_IO_LEDHello
    _IO_LEDHello->_IO_LEDPrintChar

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     120
                  _SYSTEM_Initialize
                     _SYSTEM_Process
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Process                                       0     0      0       0
                        _RTCC_Update
 ---------------------------------------------------------------------------------
 (2) _RTCC_Update                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     120
    _INTERRUPT_GlobalInterruptEnable
                        _IO_LEDHello
                    _IO_LEDPrintChar
                     _MCU_Initialize
              _OSCILLATOR_Initialize
                        _RTCC_Enable
 ---------------------------------------------------------------------------------
 (2) _RTCC_Enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MCU_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_LEDHello                                          3     3      0     105
                                              3 COMRAM     3     3      0
                    _IO_LEDPrintChar
 ---------------------------------------------------------------------------------
 (2) _IO_LEDPrintChar                                      3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GlobalInterruptEnable                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_GlobalInterruptEnable
     _IO_LEDHello
       _IO_LEDPrintChar
     _IO_LEDPrintChar
     _MCU_Initialize
     _OSCILLATOR_Initialize
     _RTCC_Enable
   _SYSTEM_Process
     _RTCC_Update

 _TMR0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      36        0.0%
BITBIGSFRhhhlll    555      0       0      25        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlll       283      0       0      34        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRlhhhh      60      0       0      28        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      6       9       1        9.5%
BITBIGSFRllhhh      35      0       0      31        0.0%
BITBIGSFRhhhhhh     28      0       0      20        0.0%
BITBIGSFRllhhl       F      0       0      32        0.0%
BITBIGSFRllhl        F      0       0      33        0.0%
BITBIGSFRhhl         F      0       0      26        0.0%
BITBIGSFRhl          F      0       0      27        0.0%
BITBIGSFRhhhhhl      5      0       0      22        0.0%
BITBIGSFRhhhlh       5      0       0      24        0.0%
BITBIGSFRhhhhl       5      0       0      23        0.0%
BITBIGSFRhhhhhh      2      0       0      21        0.0%
BITBIGSFRlhhl        1      0       0      29        0.0%
BITBIGSFRlhl         1      0       0      30        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       9      35        0.0%
DATA                 0      0       9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Jul 30 18:55:42 2023

                                     l11 42FA                                       l92 430A  
                                     l95 4248                                       l89 42B2  
                                     l98 42CA                                       u10 41E2  
                                     u11 41DE                                       u20 4214  
                                     u21 4210                                       u30 414E  
                                     u31 414A                                       u40 4160  
                                     u41 415C                                       u50 4174  
                                     u51 416E                                       u60 4196  
                                     u61 4190                                       u56 4176  
                                     u66 4198                                       u77 41C4  
                                     u87 41F6                                      l110 40B2  
                                    l120 40BE                                      l112 40B4  
                                    l105 4214                                      l122 40C0  
                                    l114 40B6                                      l131 40CC  
                                    l140 40D8                                      l124 40C2  
                                    l116 40B8                                      l133 40CE  
                                    l142 40DA                                      l126 40C4  
                                    l151 40E6                                      l135 40D0  
                                    l160 40F2                                      l144 40DC  
                                    l153 40E8                                      l129 40CA  
                                    l162 40F4                                      l138 40D6  
                                    l147 40E2                                      l171 41AA  
                                    l156 40EE                                      l164 413C  
                                    l149 40E4                                      l158 40F0  
                                    l167 427A                                      l176 41AE  
                                    l197 42E2                                      l901 4262  
                                    l911 41B0                                      l903 4266  
                                    l921 41D0                                      l905 4268  
                                    l907 42CC                                      l931 41EC  
                                    l923 41D2                                      l909 42D6  
                                    l933 4202                                      l925 41E2  
                                    l917 41B4                                      l941 4150  
                                    l935 4204                                      l919 41BA  
                                    l951 42A8                                      l943 4160  
                                    l881 40AE                                      l929 41E6  
                                    l953 42AC                                      l945 4164  
                                    l937 413E                                      l891 4216  
                                    l947 4186                                      l939 414E  
                                    l955 4306                                      l885 40FA  
                                    l893 42B4                                      l949 4298  
                                    l957 42F6                                      l895 424A  
                                    l985 410E                                      l897 424C  
                                    l899 4260                                      wreg 003FE8  
                                   _LATA 003FBA                                     _LATB 003FBB  
                                   _LATC 003FBC                                     _main 42F6  
                                   start 40A8                             ___param_bank 000000  
          __end_of_OSCILLATOR_Initialize 42CC                                    ?_main 0001  
                                  i2l205 42F4                                    i2l961 42E4  
                                  i2l963 42E8                                    _OSCEN 0039DD  
                                  _TMR0H 003FB7                                    _TMR0L 003FB6  
                                  _PORTA 003FCA                                    _PORTB 003FCB  
                                  _PORTC 003FCC                                    _TRISA 003FC2  
                                  _TRISB 003FC3                                    _TRISC 003FC4  
                       ??_MCU_Initialize 0001                         __end_of_TMR0_ISR 42F6  
                           ?_IO_LEDHello 0001                                    status 003FD8  
                        __initialization 427C                             __end_of_main 4306  
                                 ??_main 0007                            __activetblptr 000002  
                                 _ANSELA 003A40                                   _ANSELB 003A50  
                                 _ANSELC 003A60                                   _OSCFRQ 0039DF  
                        _TIMER0_OVR_FLAG 0009                             ?_RTCC_Enable 0001  
                 IO_LEDPrintChar@LEDCHAR 0003                             ?_RTCC_Update 0001  
                                 isa$std 000001                                   tblptru 003FF8  
                      ??_IO_LEDPrintChar 0001                        _SYSTEM_Initialize 4298  
                             __accesstop 0060                  __end_of__initialization 428E  
                     ?_SYSTEM_Initialize 0001                            ___rparam_used 000001  
                         __pcstackCOMRAM 0001                      ??_SYSTEM_Initialize 0007  
                              ?_TMR0_ISR 0001                __end_of_SYSTEM_Initialize 42B4  
                                IVTBASEH 003FD6                                  IVTBASEL 003FD5  
                                IVTBASEU 003FD7                               ??_TMR0_ISR 0001  
                                _OSCCON1 0039D9                                  _OSCCON3 0039DB  
                                _OSCTUNE 0039DE                                  __Hparam 0000  
                                __Lparam 0000                                  __pcinit 427C  
                                __ramtop 0800                            ivt0x4008_base 4008  
                                __ptext0 42F6                                  __ptext1 4306  
                                __ptext2 413E                                  __ptext3 4298  
                                __ptext4 424A                                  __ptext5 42B4  
                                __ptext6 4216                                  __ptext7 41B0  
                                __ptext8 40AC                                  __ptext9 42CC  
                  _OSCILLATOR_Initialize 42B4                                _LED_ROTER 0007  
                   end_of_initialization 428E                            __Lmediumconst 0000  
                        _IO_LEDPrintChar 40AC                           _SYSTEM_Process 4306  
                 ?_OSCILLATOR_Initialize 0001                      start_initialization 427C  
                __end_of_IO_LEDPrintChar 413E                   __end_of_SYSTEM_Process 430C  
                            __pbssCOMRAM 0007                            ??_IO_LEDHello 0004  
                            __pivt0x4008 4008                          ?_SYSTEM_Process 0001  
__end_of_INTERRUPT_GlobalInterruptEnable 42E4        ??_INTERRUPT_GlobalInterruptEnable 0001  
       ?_INTERRUPT_GlobalInterruptEnable 0001          _INTERRUPT_GlobalInterruptEnable 42CC  
                         _MCU_Initialize 4216                                 _LATCbits 003FBC  
                    __end_of_IO_LEDHello 4216                                 _IPR3bits 003983  
                               _PIE3bits 003993                                 _IVTBASEH 003FD6  
                               _IVTBASEL 003FD5                                 _IVTBASEU 003FD7  
                          ??_RTCC_Enable 0001                         ?_IO_LEDPrintChar 0001  
                               _PIR3bits 0039A3                        ivt0x4008_undefint 40A6  
                          ??_RTCC_Update 0001                                 _TMR0_ISR 42E4  
                 IO_LEDHello@LED_COUNTER 0006                              _INTCON0bits 003FD2  
                 __end_of_MCU_Initialize 424A                              _counterTMR0 0008  
                               __Hrparam 0000                                 __Lrparam 0000  
                ??_OSCILLATOR_Initialize 0001                      __end_of_RTCC_Enable 427C  
                    __end_of_RTCC_Update 41B0                               _T0CON0bits 003FB8  
                             _T0CON1bits 003FB9                                 __ptext10 42E4  
                            _IO_LEDHello 41B0                          ?_MCU_Initialize 0001  
                               isa$xinst 000000                                 intlevel2 0000  
                       ??_SYSTEM_Process 0002                              _RTCC_Enable 424A  
                            _RTCC_Update 413E  
