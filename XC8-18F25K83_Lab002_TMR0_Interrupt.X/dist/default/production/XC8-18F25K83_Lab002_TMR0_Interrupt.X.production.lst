

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Aug 27 20:39:37 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25  0000                     
    26                           ; Version 2.35
    27                           ; Generated 05/05/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F25K83 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     _T0CON1bits	set	16313
    62  0000                     _OSCTUNE	set	14814
    63  0000                     _OSCFRQ	set	14815
    64  0000                     _LATCbits	set	16316
    65  0000                     _IPR3bits	set	14723
    66  0000                     _OSCCON1	set	14809
    67  0000                     _ANSELA	set	14912
    68  0000                     _ANSELB	set	14928
    69  0000                     _ANSELC	set	14944
    70  0000                     _TMR0L	set	16310
    71  0000                     _TMR0H	set	16311
    72  0000                     _T0CON0bits	set	16312
    73  0000                     _LATA	set	16314
    74  0000                     _TRISA	set	16322
    75  0000                     _PORTA	set	16330
    76  0000                     _TRISC	set	16324
    77  0000                     _TRISB	set	16323
    78  0000                     _LATC	set	16316
    79  0000                     _LATB	set	16315
    80  0000                     _INTCON0bits	set	16338
    81  0000                     _PORTC	set	16332
    82  0000                     _PORTB	set	16331
    83  0000                     _OSCCON3	set	14811
    84  0000                     _OSCEN	set	14813
    85  0000                     _PIE3bits	set	14739
    86  0000                     _PIR3bits	set	14755
    87                           
    88                           ; #config settings
    89                           
    90                           	psect	cinit
    91  00022E                     __pcinit:
    92                           	callstack 0
    93  00022E                     start_initialization:
    94                           	callstack 0
    95  00022E                     __initialization:
    96                           	callstack 0
    97                           
    98                           ; Clear objects allocated to COMRAM (3 bytes)
    99  00022E  6A0A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   100  000230  6A09               	clrf	(__pbssCOMRAM+1)& (0+255),c
   101  000232  6A08               	clrf	__pbssCOMRAM& (0+255),c
   102                           
   103                           ;
   104                           ; Setup IVTBASE
   105                           ;
   106  000234  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   107  000236  6ED5               	movwf	213,c
   108  000238  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   109  00023A  6ED6               	movwf	214,c
   110  00023C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   111  00023E  6ED7               	movwf	215,c
   112  000240                     end_of_initialization:
   113                           	callstack 0
   114  000240                     __end_of__initialization:
   115                           	callstack 0
   116  000240  0E00               	movlw	low (__Lmediumconst shr (0+16))
   117  000242  6EF8               	movwf	tblptru,c
   118  000244  0100               	movlb	0
   119  000246  EF3F  F001         	goto	_main	;jump to C main() function
   120                           
   121                           	psect	bssCOMRAM
   122  000008                     __pbssCOMRAM:
   123                           	callstack 0
   124  000008                     _LED_ROTER:
   125                           	callstack 0
   126  000008                     	ds	1
   127  000009                     _counterTMR0:
   128                           	callstack 0
   129  000009                     	ds	1
   130  00000A                     _TIMER0_OVR_FLAG:
   131                           	callstack 0
   132  00000A                     	ds	1
   133                           
   134                           	psect	cstackCOMRAM
   135  000001                     __pcstackCOMRAM:
   136                           	callstack 0
   137  000001                     ??_INTERRUPT_InterruptManagerLow:
   138                           
   139                           ; 1 bytes @ 0x0
   140  000001                     	ds	1
   141  000002                     ??_IO_LEDPrintChar:
   142  000002                     ??_RTCC_Update:
   143                           
   144                           ; 1 bytes @ 0x1
   145  000002                     	ds	1
   146  000003                     
   147                           ; 1 bytes @ 0x2
   148  000003                     	ds	1
   149  000004                     IO_LEDPrintChar@LEDCHAR:
   150                           	callstack 0
   151                           
   152                           ; 1 bytes @ 0x3
   153  000004                     	ds	1
   154  000005                     ??_IO_LEDHello:
   155                           
   156                           ; 1 bytes @ 0x4
   157  000005                     	ds	2
   158  000007                     IO_LEDHello@LED_COUNTER:
   159                           	callstack 0
   160                           
   161                           ; 1 bytes @ 0x6
   162  000007                     	ds	1
   163  000008                     
   164                           ; 1 bytes @ 0x7
   165 ;;
   166 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   167 ;;
   168 ;; *************** function _main *****************
   169 ;; Defined at:
   170 ;;		line 22 in file "main.c"
   171 ;; Parameters:    Size  Location     Type
   172 ;;		None
   173 ;; Auto vars:     Size  Location     Type
   174 ;;		None
   175 ;; Return value:  Size  Location     Type
   176 ;;                  1    wreg      void 
   177 ;; Registers used:
   178 ;;		wreg, status,2, status,0, cstack
   179 ;; Tracked objects:
   180 ;;		On entry : 0/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   184 ;;      Params:         0       0       0       0       0       0       0       0       0
   185 ;;      Locals:         0       0       0       0       0       0       0       0       0
   186 ;;      Temps:          0       0       0       0       0       0       0       0       0
   187 ;;      Totals:         0       0       0       0       0       0       0       0       0
   188 ;;Total ram usage:        0 bytes
   189 ;; Hardware stack levels required when called: 5
   190 ;; This function calls:
   191 ;;		_SYSTEM_Initialize
   192 ;;		_SYSTEM_Process
   193 ;; This function is called by:
   194 ;;		Startup code after reset
   195 ;; This function uses a non-reentrant model
   196 ;;
   197                           
   198                           	psect	text0
   199  00027E                     __ptext0:
   200                           	callstack 0
   201  00027E                     _main:
   202                           	callstack 26
   203  00027E                     
   204                           ;main.c: 23:     SYSTEM_Initialize();
   205  00027E  EC25  F001         	call	_SYSTEM_Initialize	;wreg free
   206  000282                     l11:
   207                           
   208                           ;main.c: 25:         SYSTEM_Process();
   209  000282  EC4D  F001         	call	_SYSTEM_Process	;wreg free
   210  000286  EF41  F001         	goto	l11
   211  00028A  EF0E  F000         	goto	start
   212  00028E                     __end_of_main:
   213                           	callstack 0
   214                           
   215 ;; *************** function _SYSTEM_Process *****************
   216 ;; Defined at:
   217 ;;		line 41 in file "mcu.c"
   218 ;; Parameters:    Size  Location     Type
   219 ;;		None
   220 ;; Auto vars:     Size  Location     Type
   221 ;;		None
   222 ;; Return value:  Size  Location     Type
   223 ;;                  1    wreg      void 
   224 ;; Registers used:
   225 ;;		wreg, status,2, status,0, cstack
   226 ;; Tracked objects:
   227 ;;		On entry : 0/0
   228 ;;		On exit  : 0/0
   229 ;;		Unchanged: 0/0
   230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   231 ;;      Params:         0       0       0       0       0       0       0       0       0
   232 ;;      Locals:         0       0       0       0       0       0       0       0       0
   233 ;;      Temps:          0       0       0       0       0       0       0       0       0
   234 ;;      Totals:         0       0       0       0       0       0       0       0       0
   235 ;;Total ram usage:        0 bytes
   236 ;; Hardware stack levels used: 1
   237 ;; Hardware stack levels required when called: 3
   238 ;; This function calls:
   239 ;;		_RTCC_Update
   240 ;; This function is called by:
   241 ;;		_main
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           	psect	text1
   246  00029A                     __ptext1:
   247                           	callstack 0
   248  00029A                     _SYSTEM_Process:
   249                           	callstack 27
   250  00029A                     
   251                           ;mcu.c: 42:     RTCC_Update();
   252  00029A  EC59  F000         	call	_RTCC_Update	;wreg free
   253  00029E  0012               	return		;funcret
   254  0002A0                     __end_of_SYSTEM_Process:
   255                           	callstack 0
   256                           
   257 ;; *************** function _RTCC_Update *****************
   258 ;; Defined at:
   259 ;;		line 186 in file "mcu.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;		None
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, status,2, status,0
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   273 ;;      Params:         0       0       0       0       0       0       0       0       0
   274 ;;      Locals:         0       0       0       0       0       0       0       0       0
   275 ;;      Temps:          1       0       0       0       0       0       0       0       0
   276 ;;      Totals:         1       0       0       0       0       0       0       0       0
   277 ;;Total ram usage:        1 bytes
   278 ;; Hardware stack levels used: 1
   279 ;; Hardware stack levels required when called: 2
   280 ;; This function calls:
   281 ;;		Nothing
   282 ;; This function is called by:
   283 ;;		_SYSTEM_Process
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           	psect	text2
   288  0000B2                     __ptext2:
   289                           	callstack 0
   290  0000B2                     _RTCC_Update:
   291                           	callstack 27
   292  0000B2                     
   293                           ;mcu.c: 187:     if(TIMER0_OVR_FLAG){
   294  0000B2  500A               	movf	_TIMER0_OVR_FLAG^0,w,c
   295  0000B4  B4D8               	btfsc	status,2,c
   296  0000B6  EF5F  F000         	goto	u31
   297  0000BA  EF61  F000         	goto	u30
   298  0000BE                     u31:
   299  0000BE  EF93  F000         	goto	l176
   300  0000C2                     u30:
   301  0000C2                     
   302                           ;mcu.c: 188:         counterTMR0++;
   303  0000C2  2A09               	incf	_counterTMR0^0,f,c
   304  0000C4                     
   305                           ;mcu.c: 189:         if(counterTMR0>9){
   306  0000C4  0E09               	movlw	9
   307  0000C6  6409               	cpfsgt	_counterTMR0^0,c
   308  0000C8  EF68  F000         	goto	u41
   309  0000CC  EF6A  F000         	goto	u40
   310  0000D0                     u41:
   311  0000D0  EF91  F000         	goto	l171
   312  0000D4                     u40:
   313  0000D4                     
   314                           ;mcu.c: 190:             counterTMR0 = 0;
   315  0000D4  0E00               	movlw	0
   316  0000D6  6E09               	movwf	_counterTMR0^0,c
   317  0000D8  B4BC               	btfsc	188,2,c	;volatile
   318  0000DA  EF71  F000         	goto	u51
   319  0000DE  EF74  F000         	goto	u50
   320  0000E2                     u51:
   321  0000E2  0E01               	movlw	1
   322  0000E4  EF75  F000         	goto	u56
   323  0000E8                     u50:
   324  0000E8  0E00               	movlw	0
   325  0000EA                     u56:
   326  0000EA  0AFF               	xorlw	255
   327  0000EC  6E02               	movwf	??_RTCC_Update^0,c
   328  0000EE  4602               	rlncf	??_RTCC_Update^0,f,c
   329  0000F0  4602               	rlncf	??_RTCC_Update^0,f,c
   330  0000F2  50BC               	movf	188,w,c	;volatile
   331  0000F4  1802               	xorwf	??_RTCC_Update^0,w,c
   332  0000F6  0BFB               	andlw	-5
   333  0000F8  1802               	xorwf	??_RTCC_Update^0,w,c
   334  0000FA  6EBC               	movwf	188,c	;volatile
   335  0000FC  B6BC               	btfsc	188,3,c	;volatile
   336  0000FE  EF83  F000         	goto	u61
   337  000102  EF86  F000         	goto	u60
   338  000106                     u61:
   339  000106  0E01               	movlw	1
   340  000108  EF87  F000         	goto	u66
   341  00010C                     u60:
   342  00010C  0E00               	movlw	0
   343  00010E                     u66:
   344  00010E  0AFF               	xorlw	255
   345  000110  6E02               	movwf	??_RTCC_Update^0,c
   346  000112  4602               	rlncf	??_RTCC_Update^0,f,c
   347  000114  4602               	rlncf	??_RTCC_Update^0,f,c
   348  000116  4602               	rlncf	??_RTCC_Update^0,f,c
   349  000118  50BC               	movf	188,w,c	;volatile
   350  00011A  1802               	xorwf	??_RTCC_Update^0,w,c
   351  00011C  0BF7               	andlw	-9
   352  00011E  1802               	xorwf	??_RTCC_Update^0,w,c
   353  000120  6EBC               	movwf	188,c	;volatile
   354  000122                     l171:
   355                           
   356                           ;mcu.c: 194:         TIMER0_OVR_FLAG = 0;
   357  000122  0E00               	movlw	0
   358  000124  6E0A               	movwf	_TIMER0_OVR_FLAG^0,c
   359  000126                     l176:
   360  000126  0012               	return		;funcret
   361  000128                     __end_of_RTCC_Update:
   362                           	callstack 0
   363                           
   364 ;; *************** function _SYSTEM_Initialize *****************
   365 ;; Defined at:
   366 ;;		line 23 in file "mcu.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;		None
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		wreg, status,2, status,0, cstack
   375 ;; Tracked objects:
   376 ;;		On entry : 0/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   380 ;;      Params:         0       0       0       0       0       0       0       0       0
   381 ;;      Locals:         0       0       0       0       0       0       0       0       0
   382 ;;      Temps:          0       0       0       0       0       0       0       0       0
   383 ;;      Totals:         0       0       0       0       0       0       0       0       0
   384 ;;Total ram usage:        0 bytes
   385 ;; Hardware stack levels used: 1
   386 ;; Hardware stack levels required when called: 4
   387 ;; This function calls:
   388 ;;		_INTERRUPT_GlobalInterruptEnable
   389 ;;		_IO_LEDHello
   390 ;;		_IO_LEDPrintChar
   391 ;;		_MCU_Initialize
   392 ;;		_OSCILLATOR_Initialize
   393 ;;		_RTCC_Enable
   394 ;; This function is called by:
   395 ;;		_main
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           	psect	text3
   400  00024A                     __ptext3:
   401                           	callstack 0
   402  00024A                     _SYSTEM_Initialize:
   403                           	callstack 26
   404  00024A                     
   405                           ;mcu.c: 24:     MCU_Initialize();
   406  00024A  ECE4  F000         	call	_MCU_Initialize	;wreg free
   407                           
   408                           ;mcu.c: 25:     OSCILLATOR_Initialize();
   409  00024E  EC33  F001         	call	_OSCILLATOR_Initialize	;wreg free
   410                           
   411                           ;mcu.c: 26:     RTCC_Enable();
   412  000252  ECFE  F000         	call	_RTCC_Enable	;wreg free
   413  000256                     
   414                           ;mcu.c: 27:     INTERRUPT_GlobalInterruptEnable();
   415  000256  EC47  F001         	call	_INTERRUPT_GlobalInterruptEnable	;wreg free
   416  00025A                     
   417                           ;mcu.c: 28:     IO_LEDHello();
   418  00025A  EC94  F000         	call	_IO_LEDHello	;wreg free
   419  00025E                     
   420                           ;mcu.c: 29:     IO_LEDPrintChar(0);
   421  00025E  0E00               	movlw	0
   422  000260  EC10  F000         	call	_IO_LEDPrintChar
   423  000264  0012               	return		;funcret
   424  000266                     __end_of_SYSTEM_Initialize:
   425                           	callstack 0
   426                           
   427 ;; *************** function _RTCC_Enable *****************
   428 ;; Defined at:
   429 ;;		line 171 in file "mcu.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, status,2
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   443 ;;      Params:         0       0       0       0       0       0       0       0       0
   444 ;;      Locals:         0       0       0       0       0       0       0       0       0
   445 ;;      Temps:          0       0       0       0       0       0       0       0       0
   446 ;;      Totals:         0       0       0       0       0       0       0       0       0
   447 ;;Total ram usage:        0 bytes
   448 ;; Hardware stack levels used: 1
   449 ;; Hardware stack levels required when called: 2
   450 ;; This function calls:
   451 ;;		Nothing
   452 ;; This function is called by:
   453 ;;		_SYSTEM_Initialize
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           	psect	text4
   458  0001FC                     __ptext4:
   459                           	callstack 0
   460  0001FC                     _RTCC_Enable:
   461                           	callstack 27
   462  0001FC                     
   463                           ;mcu.c: 172:     T0CON0bits.MD16 = 1;
   464  0001FC  88B8               	bsf	184,4,c	;volatile
   465  0001FE                     
   466                           ;mcu.c: 173:     T0CON0bits.OUTPS = 0b0000;
   467  0001FE  0EF0               	movlw	-16
   468  000200  16B8               	andwf	184,f,c	;volatile
   469                           
   470                           ;mcu.c: 174:     T0CON1bits.CS = 0b010;
   471  000202  50B9               	movf	185,w,c	;volatile
   472  000204  0B1F               	andlw	-225
   473  000206  0940               	iorlw	64
   474  000208  6EB9               	movwf	185,c	;volatile
   475                           
   476                           ;mcu.c: 175:     T0CON1bits.CKPS = 0b100;
   477  00020A  50B9               	movf	185,w,c	;volatile
   478  00020C  0BF0               	andlw	-16
   479  00020E  0904               	iorlw	4
   480  000210  6EB9               	movwf	185,c	;volatile
   481  000212                     
   482                           ;mcu.c: 176:     T0CON0bits.EN = 1;
   483  000212  8EB8               	bsf	184,7,c	;volatile
   484  000214                     
   485                           ;mcu.c: 177:     IPR3bits.TMR0IP = 0;
   486  000214  0139               	movlb	57	; () banked
   487  000216  9F83               	bcf	131,7,b	;volatile
   488  000218                     
   489                           ; BSR set to: 57
   490                           ;mcu.c: 178:     PIE3bits.TMR0IE = 1;
   491  000218  8F93               	bsf	147,7,b	;volatile
   492  00021A                     
   493                           ; BSR set to: 57
   494                           ;mcu.c: 179:     PIR3bits.TMR0IF = 0;
   495  00021A  9FA3               	bcf	163,7,b	;volatile
   496                           
   497                           ;mcu.c: 180:     TIMER0_OVR_FLAG = 0;
   498  00021C  0E00               	movlw	0
   499  00021E  6E0A               	movwf	_TIMER0_OVR_FLAG^0,c
   500                           
   501                           ;mcu.c: 181:     counterTMR0 = 0;
   502  000220  0E00               	movlw	0
   503  000222  6E09               	movwf	_counterTMR0^0,c
   504                           
   505                           ;mcu.c: 182:     ((void)(TMR0H=((53036)>>8),TMR0L=((53036)&0xFF)));
   506  000224  0ECF               	movlw	207
   507  000226  6EB7               	movwf	183,c	;volatile
   508  000228  0E2C               	movlw	44
   509  00022A  6EB6               	movwf	182,c	;volatile
   510  00022C                     
   511                           ; BSR set to: 57
   512  00022C  0012               	return		;funcret
   513  00022E                     __end_of_RTCC_Enable:
   514                           	callstack 0
   515                           
   516 ;; *************** function _OSCILLATOR_Initialize *****************
   517 ;; Defined at:
   518 ;;		line 81 in file "mcu.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;		None
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg, status,2
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   532 ;;      Params:         0       0       0       0       0       0       0       0       0
   533 ;;      Locals:         0       0       0       0       0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0       0       0       0       0
   535 ;;      Totals:         0       0       0       0       0       0       0       0       0
   536 ;;Total ram usage:        0 bytes
   537 ;; Hardware stack levels used: 1
   538 ;; Hardware stack levels required when called: 2
   539 ;; This function calls:
   540 ;;		Nothing
   541 ;; This function is called by:
   542 ;;		_SYSTEM_Initialize
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           	psect	text5
   547  000266                     __ptext5:
   548                           	callstack 0
   549  000266                     _OSCILLATOR_Initialize:
   550                           	callstack 27
   551  000266                     
   552                           ;mcu.c: 83:     OSCCON1 = 0x62;
   553  000266  0E62               	movlw	98
   554  000268  0139               	movlb	57	; () banked
   555  00026A  6FD9               	movwf	217,b	;volatile
   556                           
   557                           ;mcu.c: 85:     OSCCON3 = 0x00;
   558  00026C  0E00               	movlw	0
   559  00026E  6FDB               	movwf	219,b	;volatile
   560                           
   561                           ;mcu.c: 87:     OSCEN = 0x00;
   562  000270  0E00               	movlw	0
   563  000272  6FDD               	movwf	221,b	;volatile
   564                           
   565                           ;mcu.c: 89:     OSCFRQ = 0x06;
   566  000274  0E06               	movlw	6
   567  000276  6FDF               	movwf	223,b	;volatile
   568                           
   569                           ;mcu.c: 91:     OSCTUNE = 0x00;
   570  000278  0E00               	movlw	0
   571  00027A  6FDE               	movwf	222,b	;volatile
   572  00027C                     
   573                           ; BSR set to: 57
   574  00027C  0012               	return		;funcret
   575  00027E                     __end_of_OSCILLATOR_Initialize:
   576                           	callstack 0
   577                           
   578 ;; *************** function _MCU_Initialize *****************
   579 ;; Defined at:
   580 ;;		line 53 in file "mcu.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		wreg, status,2
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   594 ;;      Params:         0       0       0       0       0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0       0       0       0       0
   596 ;;      Temps:          0       0       0       0       0       0       0       0       0
   597 ;;      Totals:         0       0       0       0       0       0       0       0       0
   598 ;;Total ram usage:        0 bytes
   599 ;; Hardware stack levels used: 1
   600 ;; Hardware stack levels required when called: 2
   601 ;; This function calls:
   602 ;;		Nothing
   603 ;; This function is called by:
   604 ;;		_SYSTEM_Initialize
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608                           	psect	text6
   609  0001C8                     __ptext6:
   610                           	callstack 0
   611  0001C8                     _MCU_Initialize:
   612                           	callstack 27
   613  0001C8                     
   614                           ;mcu.c: 55:     ANSELA = 0x00;
   615  0001C8  0E00               	movlw	0
   616  0001CA  013A               	movlb	58	; () banked
   617  0001CC  6F40               	movwf	64,b	;volatile
   618                           
   619                           ;mcu.c: 56:     ANSELB = 0x00;
   620  0001CE  0E00               	movlw	0
   621  0001D0  6F50               	movwf	80,b	;volatile
   622                           
   623                           ;mcu.c: 57:     ANSELC = 0x00;
   624  0001D2  0E00               	movlw	0
   625  0001D4  6F60               	movwf	96,b	;volatile
   626                           
   627                           ;mcu.c: 60:     TRISA = 0x00;
   628  0001D6  0E00               	movlw	0
   629  0001D8  6EC2               	movwf	194,c	;volatile
   630                           
   631                           ;mcu.c: 61:     TRISB = 0x00;
   632  0001DA  0E00               	movlw	0
   633  0001DC  6EC3               	movwf	195,c	;volatile
   634                           
   635                           ;mcu.c: 62:     TRISC = 0x00;
   636  0001DE  0E00               	movlw	0
   637  0001E0  6EC4               	movwf	196,c	;volatile
   638                           
   639                           ;mcu.c: 65:     LATA = 0x00;
   640  0001E2  0E00               	movlw	0
   641  0001E4  6EBA               	movwf	186,c	;volatile
   642                           
   643                           ;mcu.c: 66:     LATB = 0x00;
   644  0001E6  0E00               	movlw	0
   645  0001E8  6EBB               	movwf	187,c	;volatile
   646                           
   647                           ;mcu.c: 67:     LATC = 0x00;
   648  0001EA  0E00               	movlw	0
   649  0001EC  6EBC               	movwf	188,c	;volatile
   650                           
   651                           ;mcu.c: 68:     PORTA = 0x00;
   652  0001EE  0E00               	movlw	0
   653  0001F0  6ECA               	movwf	202,c	;volatile
   654                           
   655                           ;mcu.c: 69:     PORTB = 0x00;
   656  0001F2  0E00               	movlw	0
   657  0001F4  6ECB               	movwf	203,c	;volatile
   658                           
   659                           ;mcu.c: 70:     PORTC = 0x00;
   660  0001F6  0E00               	movlw	0
   661  0001F8  6ECC               	movwf	204,c	;volatile
   662  0001FA                     
   663                           ; BSR set to: 58
   664  0001FA  0012               	return		;funcret
   665  0001FC                     __end_of_MCU_Initialize:
   666                           	callstack 0
   667                           
   668 ;; *************** function _IO_LEDHello *****************
   669 ;; Defined at:
   670 ;;		line 102 in file "mcu.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;		None
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  LED_COUNTER     1    6[COMRAM] unsigned char 
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, status,2, status,0, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   684 ;;      Params:         0       0       0       0       0       0       0       0       0
   685 ;;      Locals:         1       0       0       0       0       0       0       0       0
   686 ;;      Temps:          2       0       0       0       0       0       0       0       0
   687 ;;      Totals:         3       0       0       0       0       0       0       0       0
   688 ;;Total ram usage:        3 bytes
   689 ;; Hardware stack levels used: 1
   690 ;; Hardware stack levels required when called: 3
   691 ;; This function calls:
   692 ;;		_IO_LEDPrintChar
   693 ;; This function is called by:
   694 ;;		_SYSTEM_Initialize
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           	psect	text7
   699  000128                     __ptext7:
   700                           	callstack 0
   701  000128                     _IO_LEDHello:
   702                           	callstack 26
   703  000128                     
   704                           ;mcu.c: 103:     uint8_t LED_COUNTER;;mcu.c: 104:     for(LED_COUNTER=1; LED_COUNTER<5; 
      +                          LED_COUNTER++){
   705  000128  0E01               	movlw	1
   706  00012A  6E07               	movwf	IO_LEDHello@LED_COUNTER^0,c
   707  00012C                     l918:
   708                           
   709                           ;mcu.c: 105:         IO_LEDPrintChar(LED_COUNTER);
   710  00012C  5007               	movf	IO_LEDHello@LED_COUNTER^0,w,c
   711  00012E  EC10  F000         	call	_IO_LEDPrintChar
   712  000132                     
   713                           ;mcu.c: 106:         _delay((unsigned long)((250)*(8000000/4000.0)));
   714  000132  0E03               	movlw	3
   715  000134  6E06               	movwf	(??_IO_LEDHello+1)^0,c
   716  000136  0E8A               	movlw	138
   717  000138  6E05               	movwf	??_IO_LEDHello^0,c
   718  00013A  0E56               	movlw	86
   719  00013C                     u97:
   720  00013C  2EE8               	decfsz	wreg,f,c
   721  00013E  D7FE               	bra	u97
   722  000140  2E05               	decfsz	??_IO_LEDHello^0,f,c
   723  000142  D7FC               	bra	u97
   724  000144  2E06               	decfsz	(??_IO_LEDHello+1)^0,f,c
   725  000146  D7FA               	bra	u97
   726  000148                     
   727                           ;mcu.c: 107:     }
   728  000148  2A07               	incf	IO_LEDHello@LED_COUNTER^0,f,c
   729  00014A  0E04               	movlw	4
   730  00014C  6407               	cpfsgt	IO_LEDHello@LED_COUNTER^0,c
   731  00014E  EFAB  F000         	goto	u11
   732  000152  EFAD  F000         	goto	u10
   733  000156                     u11:
   734  000156  EF96  F000         	goto	l918
   735  00015A                     u10:
   736  00015A                     
   737                           ;mcu.c: 108:     for(LED_COUNTER=4; LED_COUNTER>0; LED_COUNTER--){
   738  00015A  0E04               	movlw	4
   739  00015C  6E07               	movwf	IO_LEDHello@LED_COUNTER^0,c
   740  00015E                     l930:
   741                           
   742                           ;mcu.c: 109:         IO_LEDPrintChar(LED_COUNTER);
   743  00015E  5007               	movf	IO_LEDHello@LED_COUNTER^0,w,c
   744  000160  EC10  F000         	call	_IO_LEDPrintChar
   745  000164                     
   746                           ;mcu.c: 110:         _delay((unsigned long)((250)*(8000000/4000.0)));
   747  000164  0E03               	movlw	3
   748  000166  6E06               	movwf	(??_IO_LEDHello+1)^0,c
   749  000168  0E8A               	movlw	138
   750  00016A  6E05               	movwf	??_IO_LEDHello^0,c
   751  00016C  0E56               	movlw	86
   752  00016E                     u107:
   753  00016E  2EE8               	decfsz	wreg,f,c
   754  000170  D7FE               	bra	u107
   755  000172  2E05               	decfsz	??_IO_LEDHello^0,f,c
   756  000174  D7FC               	bra	u107
   757  000176  2E06               	decfsz	(??_IO_LEDHello+1)^0,f,c
   758  000178  D7FA               	bra	u107
   759  00017A                     
   760                           ;mcu.c: 111:     }
   761  00017A  0607               	decf	IO_LEDHello@LED_COUNTER^0,f,c
   762  00017C  5007               	movf	IO_LEDHello@LED_COUNTER^0,w,c
   763  00017E  A4D8               	btfss	status,2,c
   764  000180  EFC4  F000         	goto	u21
   765  000184  EFC6  F000         	goto	u20
   766  000188                     u21:
   767  000188  EFAF  F000         	goto	l930
   768  00018C                     u20:
   769  00018C  0012               	return		;funcret
   770  00018E                     __end_of_IO_LEDHello:
   771                           	callstack 0
   772                           
   773 ;; *************** function _IO_LEDPrintChar *****************
   774 ;; Defined at:
   775 ;;		line 122 in file "mcu.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  LEDCHAR         1    wreg     unsigned char 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  LEDCHAR         1    3[COMRAM] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, status,2, status,0
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   789 ;;      Params:         0       0       0       0       0       0       0       0       0
   790 ;;      Locals:         1       0       0       0       0       0       0       0       0
   791 ;;      Temps:          2       0       0       0       0       0       0       0       0
   792 ;;      Totals:         3       0       0       0       0       0       0       0       0
   793 ;;Total ram usage:        3 bytes
   794 ;; Hardware stack levels used: 1
   795 ;; Hardware stack levels required when called: 2
   796 ;; This function calls:
   797 ;;		Nothing
   798 ;; This function is called by:
   799 ;;		_SYSTEM_Initialize
   800 ;;		_IO_LEDHello
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text8
   805  000020                     __ptext8:
   806                           	callstack 0
   807  000020                     _IO_LEDPrintChar:
   808                           	callstack 27
   809                           
   810                           ;incstack = 0
   811                           ;IO_LEDPrintChar@LEDCHAR stored from wreg
   812  000020  6E04               	movwf	IO_LEDPrintChar@LEDCHAR^0,c
   813  000022                     
   814                           ;mcu.c: 123:     switch(LEDCHAR){
   815  000022  EF37  F000         	goto	l888
   816  000026                     l110:
   817  000026  94BC               	bcf	188,2,c	;volatile
   818  000028  96BC               	bcf	188,3,c	;volatile
   819  00002A  98BC               	bcf	188,4,c	;volatile
   820  00002C  9ABC               	bcf	188,5,c	;volatile
   821  00002E  EF58  F000         	goto	l164
   822  000032                     l120:
   823  000032  84BC               	bsf	188,2,c	;volatile
   824  000034  96BC               	bcf	188,3,c	;volatile
   825  000036  98BC               	bcf	188,4,c	;volatile
   826  000038  9ABC               	bcf	188,5,c	;volatile
   827  00003A  EF58  F000         	goto	l164
   828  00003E                     l129:
   829  00003E  94BC               	bcf	188,2,c	;volatile
   830  000040  86BC               	bsf	188,3,c	;volatile
   831  000042  98BC               	bcf	188,4,c	;volatile
   832  000044  9ABC               	bcf	188,5,c	;volatile
   833  000046  EF58  F000         	goto	l164
   834  00004A                     l138:
   835  00004A  94BC               	bcf	188,2,c	;volatile
   836  00004C  96BC               	bcf	188,3,c	;volatile
   837  00004E  88BC               	bsf	188,4,c	;volatile
   838  000050  9ABC               	bcf	188,5,c	;volatile
   839  000052  EF58  F000         	goto	l164
   840  000056                     l147:
   841  000056  94BC               	bcf	188,2,c	;volatile
   842  000058  96BC               	bcf	188,3,c	;volatile
   843  00005A  98BC               	bcf	188,4,c	;volatile
   844  00005C  8ABC               	bsf	188,5,c	;volatile
   845  00005E  EF58  F000         	goto	l164
   846  000062                     l156:
   847  000062  94BC               	bcf	188,2,c	;volatile
   848  000064  96BC               	bcf	188,3,c	;volatile
   849  000066  98BC               	bcf	188,4,c	;volatile
   850  000068  9ABC               	bcf	188,5,c	;volatile
   851  00006A  EF58  F000         	goto	l164
   852  00006E                     l888:
   853  00006E  5004               	movf	IO_LEDPrintChar@LEDCHAR^0,w,c
   854  000070  6E02               	movwf	??_IO_LEDPrintChar^0,c
   855  000072  6A03               	clrf	(??_IO_LEDPrintChar+1)^0,c
   856                           
   857                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   858                           ; Switch size 1, requested type "simple"
   859                           ; Number of cases is 1, Range of values is 0 to 0
   860                           ; switch strategies available:
   861                           ; Name         Instructions Cycles
   862                           ; simple_byte            4     3 (average)
   863                           ;	Chosen strategy is simple_byte
   864  000074  5003               	movf	(??_IO_LEDPrintChar+1)^0,w,c
   865  000076  0A00               	xorlw	0	; case 0
   866  000078  B4D8               	btfsc	status,2,c
   867  00007A  EF41  F000         	goto	l992
   868  00007E  EF31  F000         	goto	l156
   869  000082                     l992:
   870                           
   871                           ; Switch size 1, requested type "simple"
   872                           ; Number of cases is 5, Range of values is 0 to 4
   873                           ; switch strategies available:
   874                           ; Name         Instructions Cycles
   875                           ; simple_byte           16     9 (average)
   876                           ;	Chosen strategy is simple_byte
   877  000082  5002               	movf	??_IO_LEDPrintChar^0,w,c
   878  000084  0A00               	xorlw	0	; case 0
   879  000086  B4D8               	btfsc	status,2,c
   880  000088  EF13  F000         	goto	l110
   881  00008C  0A01               	xorlw	1	; case 1
   882  00008E  B4D8               	btfsc	status,2,c
   883  000090  EF19  F000         	goto	l120
   884  000094  0A03               	xorlw	3	; case 2
   885  000096  B4D8               	btfsc	status,2,c
   886  000098  EF1F  F000         	goto	l129
   887  00009C  0A01               	xorlw	1	; case 3
   888  00009E  B4D8               	btfsc	status,2,c
   889  0000A0  EF25  F000         	goto	l138
   890  0000A4  0A07               	xorlw	7	; case 4
   891  0000A6  B4D8               	btfsc	status,2,c
   892  0000A8  EF2B  F000         	goto	l147
   893  0000AC  EF31  F000         	goto	l156
   894  0000B0                     l164:
   895  0000B0  0012               	return		;funcret
   896  0000B2                     __end_of_IO_LEDPrintChar:
   897                           	callstack 0
   898                           
   899 ;; *************** function _INTERRUPT_GlobalInterruptEnable *****************
   900 ;; Defined at:
   901 ;;		line 18 in file "isr_manager.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		None
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   915 ;;      Params:         0       0       0       0       0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0       0       0       0
   918 ;;      Totals:         0       0       0       0       0       0       0       0       0
   919 ;;Total ram usage:        0 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; Hardware stack levels required when called: 2
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_SYSTEM_Initialize
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text9
   930  00028E                     __ptext9:
   931                           	callstack 0
   932  00028E                     _INTERRUPT_GlobalInterruptEnable:
   933                           	callstack 27
   934  00028E                     
   935                           ;isr_manager.c: 20:     INTCON0bits.IPEN = 1;
   936  00028E  8AD2               	bsf	210,5,c	;volatile
   937                           
   938                           ;isr_manager.c: 25:     IPR3bits.TMR0IP = 0;
   939  000290  0139               	movlb	57	; () banked
   940  000292  9F83               	bcf	131,7,b	;volatile
   941                           
   942                           ;isr_manager.c: 27:     (INTCON0bits.GIEH = 1);
   943  000294  8ED2               	bsf	210,7,c	;volatile
   944                           
   945                           ;isr_manager.c: 28:     (INTCON0bits.GIEL = 1);
   946  000296  8CD2               	bsf	210,6,c	;volatile
   947  000298                     
   948                           ; BSR set to: 57
   949  000298  0012               	return		;funcret
   950  00029A                     __end_of_INTERRUPT_GlobalInterruptEnable:
   951                           	callstack 0
   952                           
   953 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
   954 ;; Defined at:
   955 ;;		line 67 in file "isr_manager.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;		None
   958 ;; Auto vars:     Size  Location     Type
   959 ;;		None
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, status,2
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   969 ;;      Params:         0       0       0       0       0       0       0       0       0
   970 ;;      Locals:         0       0       0       0       0       0       0       0       0
   971 ;;      Temps:          1       0       0       0       0       0       0       0       0
   972 ;;      Totals:         1       0       0       0       0       0       0       0       0
   973 ;;Total ram usage:        1 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; Hardware stack levels required when called: 1
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		Interrupt level 1
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text10
   984  00018E                     __ptext10:
   985                           	callstack 0
   986  00018E                     _INTERRUPT_InterruptManagerLow:
   987                           	callstack 26
   988                           
   989                           ; BSR set to: 57
   990                           ;incstack = 0
   991  00018E  006F FF60  F001    	movff	status,??_INTERRUPT_InterruptManagerLow
   992  000194                     
   993                           ;isr_manager.c: 70:     if(PIE3bits.TMR0IE == 1 && PIR3bits.TMR0IF == 1)
   994  000194  0139               	movlb	57	; () banked
   995  000196  AF93               	btfss	147,7,b	;volatile
   996  000198  EFD0  F000         	goto	i1u7_21
   997  00019C  EFD2  F000         	goto	i1u7_20
   998  0001A0                     i1u7_21:
   999  0001A0  EFE0  F000         	goto	i1l208
  1000  0001A4                     i1u7_20:
  1001  0001A4                     
  1002                           ; BSR set to: 57
  1003  0001A4  AFA3               	btfss	163,7,b	;volatile
  1004  0001A6  EFD7  F000         	goto	i1u8_21
  1005  0001AA  EFD9  F000         	goto	i1u8_20
  1006  0001AE                     i1u8_21:
  1007  0001AE  EFE0  F000         	goto	i1l208
  1008  0001B2                     i1u8_20:
  1009  0001B2                     
  1010                           ; BSR set to: 57
  1011                           ;isr_manager.c: 71:     {;isr_manager.c: 72:         PIR3bits.TMR0IF = 0;
  1012  0001B2  9FA3               	bcf	163,7,b	;volatile
  1013  0001B4                     
  1014                           ; BSR set to: 57
  1015                           ;isr_manager.c: 73:         TIMER0_OVR_FLAG = 1;
  1016  0001B4  0E01               	movlw	1
  1017  0001B6  6E0A               	movwf	_TIMER0_OVR_FLAG^0,c
  1018                           
  1019                           ;isr_manager.c: 74:         ((void)(TMR0H=((53036)>>8),TMR0L=((53036)&0xFF)));
  1020  0001B8  0ECF               	movlw	207
  1021  0001BA  6EB7               	movwf	183,c	;volatile
  1022  0001BC  0E2C               	movlw	44
  1023  0001BE  6EB6               	movwf	182,c	;volatile
  1024  0001C0                     i1l208:
  1025                           
  1026                           ; BSR set to: 57
  1027  0001C0  0060  F007  FFD8   	movff	??_INTERRUPT_InterruptManagerLow,status
  1028  0001C6  0011               	retfie		f
  1029  0001C8                     __end_of_INTERRUPT_InterruptManagerLow:
  1030                           	callstack 0
  1031                           
  1032 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  1033 ;; Defined at:
  1034 ;;		line 54 in file "isr_manager.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		None
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1048 ;;      Params:         0       0       0       0       0       0       0       0       0
  1049 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1050 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1051 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1052 ;;Total ram usage:        0 bytes
  1053 ;; Hardware stack levels used: 1
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		Interrupt level 2
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text11
  1062  0002A0                     __ptext11:
  1063                           	callstack 0
  1064  0002A0                     _INTERRUPT_InterruptManagerHigh:
  1065                           	callstack 26
  1066  0002A0  0011               	retfie		f
  1067  0002A2                     __end_of_INTERRUPT_InterruptManagerHigh:
  1068                           	callstack 0
  1069                           
  1070                           ;
  1071                           ; Interrupt Vector Table @ 0x8
  1072                           ;
  1073                           
  1074                           	psect	ivt0x8
  1075  000008                     __pivt0x8:
  1076                           	callstack 0
  1077  000008                     ivt0x8_base:
  1078                           	callstack 0
  1079                           
  1080                           ; high-priority vector
  1081  000008  EF50  F001         	goto	_INTERRUPT_InterruptManagerHigh
  1082  000018                     	org	16
  1083                           
  1084                           ; low-priority vector
  1085  000018  EFC7  F000         	goto	_INTERRUPT_InterruptManagerLow
  1086  0000                     
  1087                           	psect	rparam
  1088  0000                     
  1089                           	psect	idloc
  1090                           
  1091                           ;Config register IDLOC0 @ 0x200000
  1092                           ;	unspecified, using default values
  1093  200000                     	org	2097152
  1094  200000  0FFF               	dw	4095
  1095                           
  1096                           ;Config register IDLOC1 @ 0x200002
  1097                           ;	unspecified, using default values
  1098  200002                     	org	2097154
  1099  200002  0FFF               	dw	4095
  1100                           
  1101                           ;Config register IDLOC2 @ 0x200004
  1102                           ;	unspecified, using default values
  1103  200004                     	org	2097156
  1104  200004  0FFF               	dw	4095
  1105                           
  1106                           ;Config register IDLOC3 @ 0x200006
  1107                           ;	unspecified, using default values
  1108  200006                     	org	2097158
  1109  200006  0FFF               	dw	4095
  1110                           
  1111                           ;Config register IDLOC4 @ 0x200008
  1112                           ;	unspecified, using default values
  1113  200008                     	org	2097160
  1114  200008  0FFF               	dw	4095
  1115                           
  1116                           ;Config register IDLOC5 @ 0x20000A
  1117                           ;	unspecified, using default values
  1118  20000A                     	org	2097162
  1119  20000A  0FFF               	dw	4095
  1120                           
  1121                           ;Config register IDLOC6 @ 0x20000C
  1122                           ;	unspecified, using default values
  1123  20000C                     	org	2097164
  1124  20000C  0FFF               	dw	4095
  1125                           
  1126                           ;Config register IDLOC7 @ 0x20000E
  1127                           ;	unspecified, using default values
  1128  20000E                     	org	2097166
  1129  20000E  0FFF               	dw	4095
  1130                           
  1131                           	psect	config
  1132                           
  1133                           ;Config register CONFIG1L @ 0x300000
  1134                           ;	External Oscillator Selection
  1135                           ;	FEXTOSC = OFF, Oscillator not enabled
  1136                           ;	Reset Oscillator Selection
  1137                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  1138  300000                     	org	3145728
  1139  300000  EC                 	db	236
  1140                           
  1141                           ;Config register CONFIG1H @ 0x300001
  1142                           ;	Clock out Enable bit
  1143                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1144                           ;	PRLOCKED One-Way Set Enable bit
  1145                           ;	PR1WAY = OFF, PRLOCK bit can be set and cleared repeatedly
  1146                           ;	Clock Switch Enable bit
  1147                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1148                           ;	Fail-Safe Clock Monitor Enable bit
  1149                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1150  300001                     	org	3145729
  1151  300001  FD                 	db	253
  1152                           
  1153                           ;Config register CONFIG2L @ 0x300002
  1154                           ;	MCLR Enable bit
  1155                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1156                           ;	Power-up timer selection bits
  1157                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1158                           ;	Multi-vector enable bit
  1159                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  1160                           ;	IVTLOCK bit One-way set enable bit
  1161                           ;	IVT1WAY = OFF, IVTLOCK bit can be cleared and set repeatedly
  1162                           ;	Low Power BOR Enable bit
  1163                           ;	LPBOREN = OFF, ULPBOR disabled
  1164                           ;	Brown-out Reset Enable bits
  1165                           ;	BOREN = OFF, Brown-out Reset disabled
  1166  300002                     	org	3145730
  1167  300002  27                 	db	39
  1168                           
  1169                           ;Config register CONFIG2H @ 0x300003
  1170                           ;	Brown-out Reset Voltage Selection bits
  1171                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1172                           ;	ZCD Disable bit
  1173                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1174                           ;	PPSLOCK bit One-Way Set Enable bit
  1175                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1176                           ;	Stack Full/Underflow Reset Enable bit
  1177                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1178                           ;	Debugger Enable bit
  1179                           ;	DEBUG = OFF, Background debugger disabled
  1180                           ;	Extended Instruction Set Enable bit
  1181                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1182  300003                     	org	3145731
  1183  300003  FF                 	db	255
  1184                           
  1185                           ;Config register CONFIG3L @ 0x300004
  1186                           ;	WDT Period selection bits
  1187                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1188                           ;	WDT operating mode
  1189                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1190  300004                     	org	3145732
  1191  300004  9F                 	db	159
  1192                           
  1193                           ;Config register CONFIG3H @ 0x300005
  1194                           ;	WDT Window Select bits
  1195                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1196                           ;	WDT input clock selector
  1197                           ;	WDTCCS = SC, Software Control
  1198  300005                     	org	3145733
  1199  300005  FF                 	db	255
  1200                           
  1201                           ;Config register CONFIG4L @ 0x300006
  1202                           ;	Boot Block Size selection bits
  1203                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1204                           ;	Boot Block enable bit
  1205                           ;	BBEN = OFF, Boot block disabled
  1206                           ;	Storage Area Flash enable bit
  1207                           ;	SAFEN = OFF, SAF disabled
  1208                           ;	Application Block write protection bit
  1209                           ;	WRTAPP = OFF, Application Block not write protected
  1210  300006                     	org	3145734
  1211  300006  FF                 	db	255
  1212                           
  1213                           ;Config register CONFIG4H @ 0x300007
  1214                           ;	Configuration Register Write Protection bit
  1215                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
  1216                           ;	Boot Block Write Protection bit
  1217                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
  1218                           ;	Data EEPROM Write Protection bit
  1219                           ;	WRTD = OFF, Data EEPROM not write-protected
  1220                           ;	SAF Write protection bit
  1221                           ;	WRTSAF = OFF, SAF not Write Protected
  1222                           ;	Low Voltage Programming Enable bit
  1223                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1224  300007                     	org	3145735
  1225  300007  FF                 	db	255
  1226                           
  1227                           ;Config register CONFIG5L @ 0x300008
  1228                           ;	PFM and Data EEPROM Code Protection bit
  1229                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1230  300008                     	org	3145736
  1231  300008  FF                 	db	255
  1232                           
  1233                           ;Config register CONFIG5H @ 0x300009
  1234                           ;	unspecified, using default values
  1235  300009                     	org	3145737
  1236  300009  FF                 	db	255
  1237                           tosu	equ	0x3FFF
  1238                           tosh	equ	0x3FFE
  1239                           tosl	equ	0x3FFD
  1240                           stkptr	equ	0x3FFC
  1241                           pclatu	equ	0x3FFB
  1242                           pclath	equ	0x3FFA
  1243                           pcl	equ	0x3FF9
  1244                           tblptru	equ	0x3FF8
  1245                           tblptrh	equ	0x3FF7
  1246                           tblptrl	equ	0x3FF6
  1247                           tablat	equ	0x3FF5
  1248                           prodh	equ	0x3FF4
  1249                           prodl	equ	0x3FF3
  1250                           indf0	equ	0x3FEF
  1251                           postinc0	equ	0x3FEE
  1252                           postdec0	equ	0x3FED
  1253                           preinc0	equ	0x3FEC
  1254                           plusw0	equ	0x3FEB
  1255                           fsr0h	equ	0x3FEA
  1256                           fsr0l	equ	0x3FE9
  1257                           wreg	equ	0x3FE8
  1258                           indf1	equ	0x3FE7
  1259                           postinc1	equ	0x3FE6
  1260                           postdec1	equ	0x3FE5
  1261                           preinc1	equ	0x3FE4
  1262                           plusw1	equ	0x3FE3
  1263                           fsr1h	equ	0x3FE2
  1264                           fsr1l	equ	0x3FE1
  1265                           bsr	equ	0x3FE0
  1266                           indf2	equ	0x3FDF
  1267                           postinc2	equ	0x3FDE
  1268                           postdec2	equ	0x3FDD
  1269                           preinc2	equ	0x3FDC
  1270                           plusw2	equ	0x3FDB
  1271                           fsr2h	equ	0x3FDA
  1272                           fsr2l	equ	0x3FD9
  1273                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _SYSTEM_Process->_RTCC_Update
    _SYSTEM_Initialize->_IO_LEDHello
    _IO_LEDHello->_IO_LEDPrintChar

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     120
                  _SYSTEM_Initialize
                     _SYSTEM_Process
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Process                                       0     0      0       0
                        _RTCC_Update
 ---------------------------------------------------------------------------------
 (2) _RTCC_Update                                          1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     120
    _INTERRUPT_GlobalInterruptEnable
                        _IO_LEDHello
                    _IO_LEDPrintChar
                     _MCU_Initialize
              _OSCILLATOR_Initialize
                        _RTCC_Enable
 ---------------------------------------------------------------------------------
 (2) _RTCC_Enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MCU_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_LEDHello                                          3     3      0     105
                                              4 COMRAM     3     3      0
                    _IO_LEDPrintChar
 ---------------------------------------------------------------------------------
 (2) _IO_LEDPrintChar                                      3     3      0      15
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GlobalInterruptEnable                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManagerLow                        1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManagerHigh                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_GlobalInterruptEnable
     _IO_LEDHello
       _IO_LEDPrintChar
     _IO_LEDPrintChar
     _MCU_Initialize
     _OSCILLATOR_Initialize
     _RTCC_Enable
   _SYSTEM_Process
     _RTCC_Update

 _INTERRUPT_InterruptManagerLow (ROOT)

 _INTERRUPT_InterruptManagerHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      35        0.0%
BITBIGSFRhhhlll    555      0       0      24        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlll       283      0       0      33        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRlhhhh      60      0       0      27        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      7       A       1       10.5%
BITBIGSFRllhhh      35      0       0      30        0.0%
BITBIGSFRhhhhhh     2D      0       0      20        0.0%
BITBIGSFRllhhl       F      0       0      31        0.0%
BITBIGSFRllhl        F      0       0      32        0.0%
BITBIGSFRhhl         F      0       0      25        0.0%
BITBIGSFRhl          F      0       0      26        0.0%
BITBIGSFRhhhhhl      5      0       0      21        0.0%
BITBIGSFRhhhlh       5      0       0      23        0.0%
BITBIGSFRhhhhl       5      0       0      22        0.0%
BITBIGSFRlhhl        1      0       0      28        0.0%
BITBIGSFRlhl         1      0       0      29        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       A      34        0.0%
DATA                 0      0       A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Aug 27 20:39:37 2023

                                     l11 0282                                       l92 029E  
                                     l95 01FA                                       l89 0264  
                                     l98 027C                                       u10 015A  
                                     u11 0156                                       u20 018C  
                                     u21 0188                                       u30 00C2  
                                     u31 00BE                                       u40 00D4  
                                     u41 00D0                                       u50 00E8  
                                     u51 00E2                                       u60 010C  
                                     u61 0106                                       u56 00EA  
                                     u66 010E                                       u97 013C  
                                    l110 0026                                      l120 0032  
                                    l112 0028                                      l105 018C  
                                    l122 0034                                      l114 002A  
                                    l131 0040                                      l140 004C  
                                    l124 0036                                      l116 002C  
                                    l133 0042                                      l142 004E  
                                    l126 0038                                      l151 005A  
                                    l135 0044                                      l160 0066  
                                    l144 0050                                      l153 005C  
                                    l129 003E                                      l162 0068  
                                    l138 004A                                      l147 0056  
                                    l171 0122                                      l156 0062  
                                    l164 00B0                                      l149 0058  
                                    l158 0064                                      l167 022C  
                                    l176 0126                                      l193 0298  
                                    l900 01FE                                      l910 028E  
                                    l902 0212                                      l920 0132  
                                    l912 0128                                      l904 0214  
                                    l930 015E                                      l922 0148  
                                    l906 0218                                      l932 0164  
                                    l924 014A                                      l908 021A  
                                    l940 00C2                                      l934 017A  
                                    l926 015A                                      l918 012C  
                                    l950 024A                                      l942 00C4  
                                    l936 017C                                      l952 0256  
                                    l944 00D4                                      l960 027E  
                                    l954 025A                                      l946 00D8  
                                    l938 00B2                                      l884 0022  
                                    l956 025E                                      l948 00FC  
                                    l894 01C8                                      l958 029A  
                                    l992 0082                                      l888 006E  
                                    l896 0266                                      l898 01FC  
                                    u107 016E                                      wreg 003FE8  
                                   _LATA 003FBA                                     _LATB 003FBB  
                                   _LATC 003FBC                                     _main 027E  
                                   start 001C                             ___param_bank 000000  
          __end_of_OSCILLATOR_Initialize 027E                                    ?_main 0001  
                                  i1l208 01C0                                    i2l201 02A0  
                                  i1l970 01B4                                    i1l964 0194  
                                  i1l966 01A4                                    i1l968 01B2  
                                  _OSCEN 0039DD                                    _TMR0H 003FB7  
                                  _TMR0L 003FB6                                    _PORTA 003FCA  
                                  _PORTB 003FCB                                    _PORTC 003FCC  
                                  _TRISA 003FC2                                    _TRISB 003FC3  
                                  _TRISC 003FC4                         ??_MCU_Initialize 0002  
                           ?_IO_LEDHello 0001                                    status 003FD8  
         ?_INTERRUPT_InterruptManagerLow 0001                          __initialization 022E  
                           __end_of_main 028E                                   ??_main 0008  
                          __activetblptr 000002                                   _ANSELA 003A40  
                                 _ANSELB 003A50                                   _ANSELC 003A60  
                                 _OSCFRQ 0039DF                                   i1u7_20 01A4  
                                 i1u7_21 01A0                                   i1u8_20 01B2  
                                 i1u8_21 01AE                          _TIMER0_OVR_FLAG 000A  
                           ?_RTCC_Enable 0001                   IO_LEDPrintChar@LEDCHAR 0004  
                           ?_RTCC_Update 0001                                   isa$std 000001  
                                 tblptru 003FF8                        ??_IO_LEDPrintChar 0002  
       ??_INTERRUPT_InterruptManagerHigh 0001          ?_INTERRUPT_InterruptManagerHigh 0001  
                      _SYSTEM_Initialize 024A                               __accesstop 0060  
                __end_of__initialization 0240                       ?_SYSTEM_Initialize 0001  
                          ___rparam_used 000001                           __pcstackCOMRAM 0001  
                    ??_SYSTEM_Initialize 0008                __end_of_SYSTEM_Initialize 0266  
                                IVTBASEH 003FD6                                  IVTBASEL 003FD5  
                                IVTBASEU 003FD7                                  _OSCCON1 0039D9  
                                _OSCCON3 0039DB                                  _OSCTUNE 0039DE  
                                __Hparam 0000                                  __Lparam 0000  
                                __pcinit 022E                                  __ramtop 0800  
                                __ptext0 027E                                  __ptext1 029A  
                                __ptext2 00B2                                  __ptext3 024A  
                                __ptext4 01FC                                  __ptext5 0266  
                                __ptext6 01C8                                  __ptext7 0128  
                                __ptext8 0020                                  __ptext9 028E  
                  _OSCILLATOR_Initialize 0266                                _LED_ROTER 0008  
                   end_of_initialization 0240                            __Lmediumconst 0000  
                        _IO_LEDPrintChar 0020                           _SYSTEM_Process 029A  
                 ?_OSCILLATOR_Initialize 0001                      start_initialization 022E  
                             ivt0x8_base 0008                  __end_of_IO_LEDPrintChar 00B2  
                 __end_of_SYSTEM_Process 02A0                              __pbssCOMRAM 0008  
                          ??_IO_LEDHello 0005                          ?_SYSTEM_Process 0001  
__end_of_INTERRUPT_GlobalInterruptEnable 029A        ??_INTERRUPT_GlobalInterruptEnable 0002  
       ?_INTERRUPT_GlobalInterruptEnable 0001          _INTERRUPT_GlobalInterruptEnable 028E  
                         _MCU_Initialize 01C8                                 _LATCbits 003FBC  
                    __end_of_IO_LEDHello 018E                                 _IPR3bits 003983  
                               _PIE3bits 003993                            ??_RTCC_Enable 0002  
                       ?_IO_LEDPrintChar 0001                                 _PIR3bits 0039A3  
                          ??_RTCC_Update 0002                   IO_LEDHello@LED_COUNTER 0007  
                            _INTCON0bits 003FD2                   __end_of_MCU_Initialize 01FC  
                            _counterTMR0 0009                                 __Hrparam 0000  
                               __Lrparam 0000                  ??_OSCILLATOR_Initialize 0002  
                    __end_of_RTCC_Enable 022E                      __end_of_RTCC_Update 0128  
                             _T0CON0bits 003FB8                               _T0CON1bits 003FB9  
        ??_INTERRUPT_InterruptManagerLow 0001                                 __pivt0x8 0008  
                               __ptext10 018E                                 __ptext11 02A0  
                            _IO_LEDHello 0128                          ?_MCU_Initialize 0001  
                               isa$xinst 000000                                 intlevel1 0000  
                               intlevel2 0000                         ??_SYSTEM_Process 0003  
                            _RTCC_Enable 01FC                              _RTCC_Update 00B2  
 __end_of_INTERRUPT_InterruptManagerHigh 02A2           _INTERRUPT_InterruptManagerHigh 02A0  
  __end_of_INTERRUPT_InterruptManagerLow 01C8            _INTERRUPT_InterruptManagerLow 018E  
