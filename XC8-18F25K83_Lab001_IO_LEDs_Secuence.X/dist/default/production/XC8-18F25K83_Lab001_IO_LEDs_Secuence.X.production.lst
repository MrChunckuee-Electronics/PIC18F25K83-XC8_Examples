

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Mar 06 00:05:25 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.35
    20                           ; Generated 05/05/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F25K83 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _OSCTUNE	set	14814
    55  0000                     _OSCFRQ	set	14815
    56  0000                     _LATCbits	set	16316
    57  0000                     _OSCCON1	set	14809
    58  0000                     _ANSELA	set	14912
    59  0000                     _ANSELB	set	14928
    60  0000                     _ANSELC	set	14944
    61  0000                     _LATA	set	16314
    62  0000                     _TRISA	set	16322
    63  0000                     _PORTA	set	16330
    64  0000                     _TRISC	set	16324
    65  0000                     _TRISB	set	16323
    66  0000                     _LATC	set	16316
    67  0000                     _LATB	set	16315
    68  0000                     _PORTC	set	16332
    69  0000                     _PORTB	set	16331
    70  0000                     _OSCCON3	set	14811
    71  0000                     _OSCEN	set	14813
    72                           
    73                           ; #config settings
    74                           
    75                           	psect	cinit
    76  007E9A                     __pcinit:
    77                           	callstack 0
    78  007E9A                     start_initialization:
    79                           	callstack 0
    80  007E9A                     __initialization:
    81                           	callstack 0
    82  007E9A                     end_of_initialization:
    83                           	callstack 0
    84  007E9A                     __end_of__initialization:
    85                           	callstack 0
    86  007E9A  0E00               	movlw	low (__Lmediumconst shr (0+16))
    87  007E9C  6EF8               	movwf	tblptru,c
    88  007E9E  0100               	movlb	0
    89  007EA0  EF52  F03F         	goto	_main	;jump to C main() function
    90                           
    91                           	psect	cstackCOMRAM
    92  000001                     __pcstackCOMRAM:
    93                           	callstack 0
    94  000001                     ??_IO_LEDPrintChar:
    95  000001                     
    96                           ; 1 bytes @ 0x0
    97  000001                     	ds	2
    98  000003                     IO_LEDPrintChar@LEDCHAR:
    99                           	callstack 0
   100                           
   101                           ; 1 bytes @ 0x2
   102  000003                     	ds	1
   103  000004                     ??_IO_LEDHello:
   104                           
   105                           ; 1 bytes @ 0x3
   106  000004                     	ds	2
   107  000006                     IO_LEDHello@LED_COUNTER:
   108                           	callstack 0
   109                           
   110                           ; 1 bytes @ 0x5
   111  000006                     	ds	1
   112  000007                     
   113                           ; 1 bytes @ 0x6
   114 ;;
   115 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   116 ;;
   117 ;; *************** function _main *****************
   118 ;; Defined at:
   119 ;;		line 22 in file "main.c"
   120 ;; Parameters:    Size  Location     Type
   121 ;;		None
   122 ;; Auto vars:     Size  Location     Type
   123 ;;		None
   124 ;; Return value:  Size  Location     Type
   125 ;;                  1    wreg      void 
   126 ;; Registers used:
   127 ;;		wreg, status,2, status,0, cstack
   128 ;; Tracked objects:
   129 ;;		On entry : 0/0
   130 ;;		On exit  : 0/0
   131 ;;		Unchanged: 0/0
   132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   133 ;;      Params:         0       0       0       0       0       0       0       0       0
   134 ;;      Locals:         0       0       0       0       0       0       0       0       0
   135 ;;      Temps:          0       0       0       0       0       0       0       0       0
   136 ;;      Totals:         0       0       0       0       0       0       0       0       0
   137 ;;Total ram usage:        0 bytes
   138 ;; Hardware stack levels required when called: 3
   139 ;; This function calls:
   140 ;;		_SYSTEM_Initialize
   141 ;;		_SYSTEM_Process
   142 ;; This function is called by:
   143 ;;		Startup code after reset
   144 ;; This function uses a non-reentrant model
   145 ;;
   146                           
   147                           	psect	text0
   148  007EA4                     __ptext0:
   149                           	callstack 0
   150  007EA4                     _main:
   151                           	callstack 28
   152  007EA4                     
   153                           ;main.c: 23:     SYSTEM_Initialize();
   154  007EA4  EC48  F03F         	call	_SYSTEM_Initialize	;wreg free
   155  007EA8                     l858:
   156                           
   157                           ;main.c: 25:         SYSTEM_Process();
   158  007EA8  EC45  F03F         	call	_SYSTEM_Process	;wreg free
   159  007EAC  EF54  F03F         	goto	l858
   160  007EB0  EFFE  F03F         	goto	start
   161  007EB4                     __end_of_main:
   162                           	callstack 0
   163                           
   164 ;; *************** function _SYSTEM_Process *****************
   165 ;; Defined at:
   166 ;;		line 32 in file "mcu.c"
   167 ;; Parameters:    Size  Location     Type
   168 ;;		None
   169 ;; Auto vars:     Size  Location     Type
   170 ;;		None
   171 ;; Return value:  Size  Location     Type
   172 ;;                  1    wreg      void 
   173 ;; Registers used:
   174 ;;		wreg, status,2, status,0, cstack
   175 ;; Tracked objects:
   176 ;;		On entry : 0/0
   177 ;;		On exit  : 0/0
   178 ;;		Unchanged: 0/0
   179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   180 ;;      Params:         0       0       0       0       0       0       0       0       0
   181 ;;      Locals:         0       0       0       0       0       0       0       0       0
   182 ;;      Temps:          0       0       0       0       0       0       0       0       0
   183 ;;      Totals:         0       0       0       0       0       0       0       0       0
   184 ;;Total ram usage:        0 bytes
   185 ;; Hardware stack levels used: 1
   186 ;; Hardware stack levels required when called: 2
   187 ;; This function calls:
   188 ;;		_IO_LEDHello
   189 ;; This function is called by:
   190 ;;		_main
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           	psect	text1
   195  007E8A                     __ptext1:
   196                           	callstack 0
   197  007E8A                     _SYSTEM_Process:
   198                           	callstack 28
   199  007E8A                     
   200                           ;mcu.c: 33:     IO_LEDHello();
   201  007E8A  EC80  F03F         	call	_IO_LEDHello	;wreg free
   202  007E8E  0012               	return		;funcret
   203  007E90                     __end_of_SYSTEM_Process:
   204                           	callstack 0
   205                           
   206 ;; *************** function _IO_LEDHello *****************
   207 ;; Defined at:
   208 ;;		line 93 in file "mcu.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;  LED_COUNTER     1    5[COMRAM] unsigned char 
   213 ;; Return value:  Size  Location     Type
   214 ;;                  1    wreg      void 
   215 ;; Registers used:
   216 ;;		wreg, status,2, status,0, cstack
   217 ;; Tracked objects:
   218 ;;		On entry : 0/0
   219 ;;		On exit  : 0/0
   220 ;;		Unchanged: 0/0
   221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   222 ;;      Params:         0       0       0       0       0       0       0       0       0
   223 ;;      Locals:         1       0       0       0       0       0       0       0       0
   224 ;;      Temps:          2       0       0       0       0       0       0       0       0
   225 ;;      Totals:         3       0       0       0       0       0       0       0       0
   226 ;;Total ram usage:        3 bytes
   227 ;; Hardware stack levels used: 1
   228 ;; Hardware stack levels required when called: 1
   229 ;; This function calls:
   230 ;;		_IO_LEDPrintChar
   231 ;; This function is called by:
   232 ;;		_SYSTEM_Process
   233 ;; This function uses a non-reentrant model
   234 ;;
   235                           
   236                           	psect	text2
   237  007F00                     __ptext2:
   238                           	callstack 0
   239  007F00                     _IO_LEDHello:
   240                           	callstack 28
   241  007F00                     
   242                           ;mcu.c: 94:     uint8_t LED_COUNTER;;mcu.c: 95:     for(LED_COUNTER=1; LED_COUNTER<5; LE
      +                          D_COUNTER++){
   243  007F00  0E01               	movlw	1
   244  007F02  6E06               	movwf	IO_LEDHello@LED_COUNTER^0,c
   245  007F04                     l832:
   246                           
   247                           ;mcu.c: 96:         IO_LEDPrintChar(LED_COUNTER);
   248  007F04  5006               	movf	IO_LEDHello@LED_COUNTER^0,w,c
   249  007F06  ECB5  F03F         	call	_IO_LEDPrintChar
   250  007F0A                     
   251                           ;mcu.c: 97:         _delay((unsigned long)((250)*(64000000/4000.0)));
   252  007F0A  0E15               	movlw	21
   253  007F0C  6E05               	movwf	(??_IO_LEDHello+1)^0,c
   254  007F0E  0E4B               	movlw	75
   255  007F10  6E04               	movwf	??_IO_LEDHello^0,c
   256  007F12  0EBE               	movlw	190
   257  007F14                     u37:
   258  007F14  2EE8               	decfsz	wreg,f,c
   259  007F16  D7FE               	bra	u37
   260  007F18  2E04               	decfsz	??_IO_LEDHello^0,f,c
   261  007F1A  D7FC               	bra	u37
   262  007F1C  2E05               	decfsz	(??_IO_LEDHello+1)^0,f,c
   263  007F1E  D7FA               	bra	u37
   264  007F20  D000               	nop2	
   265  007F22                     
   266                           ;mcu.c: 98:     }
   267  007F22  2A06               	incf	IO_LEDHello@LED_COUNTER^0,f,c
   268  007F24  0E04               	movlw	4
   269  007F26  6406               	cpfsgt	IO_LEDHello@LED_COUNTER^0,c
   270  007F28  EF98  F03F         	goto	u11
   271  007F2C  EF9A  F03F         	goto	u10
   272  007F30                     u11:
   273  007F30  EF82  F03F         	goto	l832
   274  007F34                     u10:
   275  007F34                     
   276                           ;mcu.c: 99:     for(LED_COUNTER=4; LED_COUNTER>0; LED_COUNTER--){
   277  007F34  0E04               	movlw	4
   278  007F36  6E06               	movwf	IO_LEDHello@LED_COUNTER^0,c
   279  007F38                     l844:
   280                           
   281                           ;mcu.c: 100:         IO_LEDPrintChar(LED_COUNTER);
   282  007F38  5006               	movf	IO_LEDHello@LED_COUNTER^0,w,c
   283  007F3A  ECB5  F03F         	call	_IO_LEDPrintChar
   284  007F3E                     
   285                           ;mcu.c: 101:         _delay((unsigned long)((250)*(64000000/4000.0)));
   286  007F3E  0E15               	movlw	21
   287  007F40  6E05               	movwf	(??_IO_LEDHello+1)^0,c
   288  007F42  0E4B               	movlw	75
   289  007F44  6E04               	movwf	??_IO_LEDHello^0,c
   290  007F46  0EBE               	movlw	190
   291  007F48                     u47:
   292  007F48  2EE8               	decfsz	wreg,f,c
   293  007F4A  D7FE               	bra	u47
   294  007F4C  2E04               	decfsz	??_IO_LEDHello^0,f,c
   295  007F4E  D7FC               	bra	u47
   296  007F50  2E05               	decfsz	(??_IO_LEDHello+1)^0,f,c
   297  007F52  D7FA               	bra	u47
   298  007F54  D000               	nop2	
   299  007F56                     
   300                           ;mcu.c: 102:     }
   301  007F56  0606               	decf	IO_LEDHello@LED_COUNTER^0,f,c
   302  007F58  5006               	movf	IO_LEDHello@LED_COUNTER^0,w,c
   303  007F5A  A4D8               	btfss	status,2,c
   304  007F5C  EFB2  F03F         	goto	u21
   305  007F60  EFB4  F03F         	goto	u20
   306  007F64                     u21:
   307  007F64  EF9C  F03F         	goto	l844
   308  007F68                     u20:
   309  007F68  0012               	return		;funcret
   310  007F6A                     __end_of_IO_LEDHello:
   311                           	callstack 0
   312                           
   313 ;; *************** function _IO_LEDPrintChar *****************
   314 ;; Defined at:
   315 ;;		line 113 in file "mcu.c"
   316 ;; Parameters:    Size  Location     Type
   317 ;;  LEDCHAR         1    wreg     unsigned char 
   318 ;; Auto vars:     Size  Location     Type
   319 ;;  LEDCHAR         1    2[COMRAM] unsigned char 
   320 ;; Return value:  Size  Location     Type
   321 ;;                  1    wreg      void 
   322 ;; Registers used:
   323 ;;		wreg, status,2, status,0
   324 ;; Tracked objects:
   325 ;;		On entry : 0/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   329 ;;      Params:         0       0       0       0       0       0       0       0       0
   330 ;;      Locals:         1       0       0       0       0       0       0       0       0
   331 ;;      Temps:          2       0       0       0       0       0       0       0       0
   332 ;;      Totals:         3       0       0       0       0       0       0       0       0
   333 ;;Total ram usage:        3 bytes
   334 ;; Hardware stack levels used: 1
   335 ;; This function calls:
   336 ;;		Nothing
   337 ;; This function is called by:
   338 ;;		_IO_LEDHello
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           	psect	text3
   343  007F6A                     __ptext3:
   344                           	callstack 0
   345  007F6A                     _IO_LEDPrintChar:
   346                           	callstack 28
   347                           
   348                           ;incstack = 0
   349                           ;IO_LEDPrintChar@LEDCHAR stored from wreg
   350  007F6A  6E03               	movwf	IO_LEDPrintChar@LEDCHAR^0,c
   351  007F6C                     
   352                           ;mcu.c: 114:     switch(LEDCHAR){
   353  007F6C  EFDC  F03F         	goto	l816
   354  007F70                     l82:
   355  007F70  94BC               	bcf	188,2,c	;volatile
   356  007F72  96BC               	bcf	188,3,c	;volatile
   357  007F74  98BC               	bcf	188,4,c	;volatile
   358  007F76  9ABC               	bcf	188,5,c	;volatile
   359  007F78  EFFD  F03F         	goto	l136
   360  007F7C                     l92:
   361  007F7C  84BC               	bsf	188,2,c	;volatile
   362  007F7E  96BC               	bcf	188,3,c	;volatile
   363  007F80  98BC               	bcf	188,4,c	;volatile
   364  007F82  9ABC               	bcf	188,5,c	;volatile
   365  007F84  EFFD  F03F         	goto	l136
   366  007F88                     l101:
   367  007F88  94BC               	bcf	188,2,c	;volatile
   368  007F8A  86BC               	bsf	188,3,c	;volatile
   369  007F8C  98BC               	bcf	188,4,c	;volatile
   370  007F8E  9ABC               	bcf	188,5,c	;volatile
   371  007F90  EFFD  F03F         	goto	l136
   372  007F94                     l110:
   373  007F94  94BC               	bcf	188,2,c	;volatile
   374  007F96  96BC               	bcf	188,3,c	;volatile
   375  007F98  88BC               	bsf	188,4,c	;volatile
   376  007F9A  9ABC               	bcf	188,5,c	;volatile
   377  007F9C  EFFD  F03F         	goto	l136
   378  007FA0                     l119:
   379  007FA0  94BC               	bcf	188,2,c	;volatile
   380  007FA2  96BC               	bcf	188,3,c	;volatile
   381  007FA4  98BC               	bcf	188,4,c	;volatile
   382  007FA6  8ABC               	bsf	188,5,c	;volatile
   383  007FA8  EFFD  F03F         	goto	l136
   384  007FAC                     l128:
   385  007FAC  94BC               	bcf	188,2,c	;volatile
   386  007FAE  96BC               	bcf	188,3,c	;volatile
   387  007FB0  98BC               	bcf	188,4,c	;volatile
   388  007FB2  9ABC               	bcf	188,5,c	;volatile
   389  007FB4  EFFD  F03F         	goto	l136
   390  007FB8                     l816:
   391  007FB8  5003               	movf	IO_LEDPrintChar@LEDCHAR^0,w,c
   392  007FBA  6E01               	movwf	??_IO_LEDPrintChar^0,c
   393  007FBC  6A02               	clrf	(??_IO_LEDPrintChar+1)^0,c
   394                           
   395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   396                           ; Switch size 1, requested type "simple"
   397                           ; Number of cases is 1, Range of values is 0 to 0
   398                           ; switch strategies available:
   399                           ; Name         Instructions Cycles
   400                           ; simple_byte            4     3 (average)
   401                           ;	Chosen strategy is simple_byte
   402  007FBE  5002               	movf	(??_IO_LEDPrintChar+1)^0,w,c
   403  007FC0  0A00               	xorlw	0	; case 0
   404  007FC2  B4D8               	btfsc	status,2,c
   405  007FC4  EFE6  F03F         	goto	l880
   406  007FC8  EFD6  F03F         	goto	l128
   407  007FCC                     l880:
   408                           
   409                           ; Switch size 1, requested type "simple"
   410                           ; Number of cases is 5, Range of values is 0 to 4
   411                           ; switch strategies available:
   412                           ; Name         Instructions Cycles
   413                           ; simple_byte           16     9 (average)
   414                           ;	Chosen strategy is simple_byte
   415  007FCC  5001               	movf	??_IO_LEDPrintChar^0,w,c
   416  007FCE  0A00               	xorlw	0	; case 0
   417  007FD0  B4D8               	btfsc	status,2,c
   418  007FD2  EFB8  F03F         	goto	l82
   419  007FD6  0A01               	xorlw	1	; case 1
   420  007FD8  B4D8               	btfsc	status,2,c
   421  007FDA  EFBE  F03F         	goto	l92
   422  007FDE  0A03               	xorlw	3	; case 2
   423  007FE0  B4D8               	btfsc	status,2,c
   424  007FE2  EFC4  F03F         	goto	l101
   425  007FE6  0A01               	xorlw	1	; case 3
   426  007FE8  B4D8               	btfsc	status,2,c
   427  007FEA  EFCA  F03F         	goto	l110
   428  007FEE  0A07               	xorlw	7	; case 4
   429  007FF0  B4D8               	btfsc	status,2,c
   430  007FF2  EFD0  F03F         	goto	l119
   431  007FF6  EFD6  F03F         	goto	l128
   432  007FFA                     l136:
   433  007FFA  0012               	return		;funcret
   434  007FFC                     __end_of_IO_LEDPrintChar:
   435                           	callstack 0
   436                           
   437 ;; *************** function _SYSTEM_Initialize *****************
   438 ;; Defined at:
   439 ;;		line 19 in file "mcu.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   453 ;;      Params:         0       0       0       0       0       0       0       0       0
   454 ;;      Locals:         0       0       0       0       0       0       0       0       0
   455 ;;      Temps:          0       0       0       0       0       0       0       0       0
   456 ;;      Totals:         0       0       0       0       0       0       0       0       0
   457 ;;Total ram usage:        0 bytes
   458 ;; Hardware stack levels used: 1
   459 ;; Hardware stack levels required when called: 1
   460 ;; This function calls:
   461 ;;		_MCU_Initialize
   462 ;;		_OSCILLATOR_Initialize
   463 ;; This function is called by:
   464 ;;		_main
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468                           	psect	text4
   469  007E90                     __ptext4:
   470                           	callstack 0
   471  007E90                     _SYSTEM_Initialize:
   472                           	callstack 29
   473  007E90                     
   474                           ;mcu.c: 20:     MCU_Initialize();
   475  007E90  EC66  F03F         	call	_MCU_Initialize	;wreg free
   476                           
   477                           ;mcu.c: 21:     OSCILLATOR_Initialize();
   478  007E94  EC5A  F03F         	call	_OSCILLATOR_Initialize	;wreg free
   479  007E98  0012               	return		;funcret
   480  007E9A                     __end_of_SYSTEM_Initialize:
   481                           	callstack 0
   482                           
   483 ;; *************** function _OSCILLATOR_Initialize *****************
   484 ;; Defined at:
   485 ;;		line 72 in file "mcu.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, status,2
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   499 ;;      Params:         0       0       0       0       0       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0       0       0       0       0
   502 ;;      Totals:         0       0       0       0       0       0       0       0       0
   503 ;;Total ram usage:        0 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; This function calls:
   506 ;;		Nothing
   507 ;; This function is called by:
   508 ;;		_SYSTEM_Initialize
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	text5
   513  007EB4                     __ptext5:
   514                           	callstack 0
   515  007EB4                     _OSCILLATOR_Initialize:
   516                           	callstack 29
   517  007EB4                     
   518                           ;mcu.c: 74:     OSCCON1 = 0x60;
   519  007EB4  0E60               	movlw	96
   520  007EB6  0139               	movlb	57	; () banked
   521  007EB8  6FD9               	movwf	217,b	;volatile
   522                           
   523                           ;mcu.c: 76:     OSCCON3 = 0x00;
   524  007EBA  0E00               	movlw	0
   525  007EBC  6FDB               	movwf	219,b	;volatile
   526                           
   527                           ;mcu.c: 78:     OSCEN = 0x00;
   528  007EBE  0E00               	movlw	0
   529  007EC0  6FDD               	movwf	221,b	;volatile
   530                           
   531                           ;mcu.c: 80:     OSCFRQ = 0x08;
   532  007EC2  0E08               	movlw	8
   533  007EC4  6FDF               	movwf	223,b	;volatile
   534                           
   535                           ;mcu.c: 82:     OSCTUNE = 0x00;
   536  007EC6  0E00               	movlw	0
   537  007EC8  6FDE               	movwf	222,b	;volatile
   538  007ECA                     
   539                           ; BSR set to: 57
   540  007ECA  0012               	return		;funcret
   541  007ECC                     __end_of_OSCILLATOR_Initialize:
   542                           	callstack 0
   543                           
   544 ;; *************** function _MCU_Initialize *****************
   545 ;; Defined at:
   546 ;;		line 44 in file "mcu.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;		None
   549 ;; Auto vars:     Size  Location     Type
   550 ;;		None
   551 ;; Return value:  Size  Location     Type
   552 ;;                  1    wreg      void 
   553 ;; Registers used:
   554 ;;		wreg, status,2
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   560 ;;      Params:         0       0       0       0       0       0       0       0       0
   561 ;;      Locals:         0       0       0       0       0       0       0       0       0
   562 ;;      Temps:          0       0       0       0       0       0       0       0       0
   563 ;;      Totals:         0       0       0       0       0       0       0       0       0
   564 ;;Total ram usage:        0 bytes
   565 ;; Hardware stack levels used: 1
   566 ;; This function calls:
   567 ;;		Nothing
   568 ;; This function is called by:
   569 ;;		_SYSTEM_Initialize
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           	psect	text6
   574  007ECC                     __ptext6:
   575                           	callstack 0
   576  007ECC                     _MCU_Initialize:
   577                           	callstack 29
   578  007ECC                     
   579                           ;mcu.c: 46:     ANSELA = 0x00;
   580  007ECC  0E00               	movlw	0
   581  007ECE  013A               	movlb	58	; () banked
   582  007ED0  6F40               	movwf	64,b	;volatile
   583                           
   584                           ;mcu.c: 47:     ANSELB = 0x00;
   585  007ED2  0E00               	movlw	0
   586  007ED4  6F50               	movwf	80,b	;volatile
   587                           
   588                           ;mcu.c: 48:     ANSELC = 0x00;
   589  007ED6  0E00               	movlw	0
   590  007ED8  6F60               	movwf	96,b	;volatile
   591                           
   592                           ;mcu.c: 51:     TRISA = 0x00;
   593  007EDA  0E00               	movlw	0
   594  007EDC  6EC2               	movwf	194,c	;volatile
   595                           
   596                           ;mcu.c: 52:     TRISB = 0x00;
   597  007EDE  0E00               	movlw	0
   598  007EE0  6EC3               	movwf	195,c	;volatile
   599                           
   600                           ;mcu.c: 53:     TRISC = 0x00;
   601  007EE2  0E00               	movlw	0
   602  007EE4  6EC4               	movwf	196,c	;volatile
   603                           
   604                           ;mcu.c: 56:     LATA = 0x00;
   605  007EE6  0E00               	movlw	0
   606  007EE8  6EBA               	movwf	186,c	;volatile
   607                           
   608                           ;mcu.c: 57:     LATB = 0x00;
   609  007EEA  0E00               	movlw	0
   610  007EEC  6EBB               	movwf	187,c	;volatile
   611                           
   612                           ;mcu.c: 58:     LATC = 0x00;
   613  007EEE  0E00               	movlw	0
   614  007EF0  6EBC               	movwf	188,c	;volatile
   615                           
   616                           ;mcu.c: 59:     PORTA = 0x00;
   617  007EF2  0E00               	movlw	0
   618  007EF4  6ECA               	movwf	202,c	;volatile
   619                           
   620                           ;mcu.c: 60:     PORTB = 0x00;
   621  007EF6  0E00               	movlw	0
   622  007EF8  6ECB               	movwf	203,c	;volatile
   623                           
   624                           ;mcu.c: 61:     PORTC = 0x00;
   625  007EFA  0E00               	movlw	0
   626  007EFC  6ECC               	movwf	204,c	;volatile
   627  007EFE                     
   628                           ; BSR set to: 58
   629  007EFE  0012               	return		;funcret
   630  007F00                     __end_of_MCU_Initialize:
   631                           	callstack 0
   632  0000                     
   633                           	psect	rparam
   634  0000                     
   635                           	psect	idloc
   636                           
   637                           ;Config register IDLOC0 @ 0x200000
   638                           ;	unspecified, using default values
   639  200000                     	org	2097152
   640  200000  0FFF               	dw	4095
   641                           
   642                           ;Config register IDLOC1 @ 0x200002
   643                           ;	unspecified, using default values
   644  200002                     	org	2097154
   645  200002  0FFF               	dw	4095
   646                           
   647                           ;Config register IDLOC2 @ 0x200004
   648                           ;	unspecified, using default values
   649  200004                     	org	2097156
   650  200004  0FFF               	dw	4095
   651                           
   652                           ;Config register IDLOC3 @ 0x200006
   653                           ;	unspecified, using default values
   654  200006                     	org	2097158
   655  200006  0FFF               	dw	4095
   656                           
   657                           ;Config register IDLOC4 @ 0x200008
   658                           ;	unspecified, using default values
   659  200008                     	org	2097160
   660  200008  0FFF               	dw	4095
   661                           
   662                           ;Config register IDLOC5 @ 0x20000A
   663                           ;	unspecified, using default values
   664  20000A                     	org	2097162
   665  20000A  0FFF               	dw	4095
   666                           
   667                           ;Config register IDLOC6 @ 0x20000C
   668                           ;	unspecified, using default values
   669  20000C                     	org	2097164
   670  20000C  0FFF               	dw	4095
   671                           
   672                           ;Config register IDLOC7 @ 0x20000E
   673                           ;	unspecified, using default values
   674  20000E                     	org	2097166
   675  20000E  0FFF               	dw	4095
   676                           
   677                           	psect	config
   678                           
   679                           ;Config register CONFIG1L @ 0x300000
   680                           ;	External Oscillator Selection
   681                           ;	FEXTOSC = OFF, Oscillator not enabled
   682                           ;	Reset Oscillator Selection
   683                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
   684  300000                     	org	3145728
   685  300000  8C                 	db	140
   686                           
   687                           ;Config register CONFIG1H @ 0x300001
   688                           ;	Clock out Enable bit
   689                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   690                           ;	PRLOCKED One-Way Set Enable bit
   691                           ;	PR1WAY = OFF, PRLOCK bit can be set and cleared repeatedly
   692                           ;	Clock Switch Enable bit
   693                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   694                           ;	Fail-Safe Clock Monitor Enable bit
   695                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   696  300001                     	org	3145729
   697  300001  FD                 	db	253
   698                           
   699                           ;Config register CONFIG2L @ 0x300002
   700                           ;	MCLR Enable bit
   701                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
   702                           ;	Power-up timer selection bits
   703                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   704                           ;	Multi-vector enable bit
   705                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
   706                           ;	IVTLOCK bit One-way set enable bit
   707                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
   708                           ;	Low Power BOR Enable bit
   709                           ;	LPBOREN = OFF, ULPBOR disabled
   710                           ;	Brown-out Reset Enable bits
   711                           ;	BOREN = OFF, Brown-out Reset disabled
   712  300002                     	org	3145730
   713  300002  3F                 	db	63
   714                           
   715                           ;Config register CONFIG2H @ 0x300003
   716                           ;	Brown-out Reset Voltage Selection bits
   717                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
   718                           ;	ZCD Disable bit
   719                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
   720                           ;	PPSLOCK bit One-Way Set Enable bit
   721                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
   722                           ;	Stack Full/Underflow Reset Enable bit
   723                           ;	STVREN = ON, Stack full/underflow will cause Reset
   724                           ;	Debugger Enable bit
   725                           ;	DEBUG = OFF, Background debugger disabled
   726                           ;	Extended Instruction Set Enable bit
   727                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
   728  300003                     	org	3145731
   729  300003  FF                 	db	255
   730                           
   731                           ;Config register CONFIG3L @ 0x300004
   732                           ;	WDT Period selection bits
   733                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   734                           ;	WDT operating mode
   735                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
   736  300004                     	org	3145732
   737  300004  9F                 	db	159
   738                           
   739                           ;Config register CONFIG3H @ 0x300005
   740                           ;	WDT Window Select bits
   741                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
   742                           ;	WDT input clock selector
   743                           ;	WDTCCS = SC, Software Control
   744  300005                     	org	3145733
   745  300005  FF                 	db	255
   746                           
   747                           ;Config register CONFIG4L @ 0x300006
   748                           ;	Boot Block Size selection bits
   749                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
   750                           ;	Boot Block enable bit
   751                           ;	BBEN = OFF, Boot block disabled
   752                           ;	Storage Area Flash enable bit
   753                           ;	SAFEN = OFF, SAF disabled
   754                           ;	Application Block write protection bit
   755                           ;	WRTAPP = OFF, Application Block not write protected
   756  300006                     	org	3145734
   757  300006  FF                 	db	255
   758                           
   759                           ;Config register CONFIG4H @ 0x300007
   760                           ;	Configuration Register Write Protection bit
   761                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
   762                           ;	Boot Block Write Protection bit
   763                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
   764                           ;	Data EEPROM Write Protection bit
   765                           ;	WRTD = OFF, Data EEPROM not write-protected
   766                           ;	SAF Write protection bit
   767                           ;	WRTSAF = OFF, SAF not Write Protected
   768                           ;	Low Voltage Programming Enable bit
   769                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
   770  300007                     	org	3145735
   771  300007  DF                 	db	223
   772                           
   773                           ;Config register CONFIG5L @ 0x300008
   774                           ;	PFM and Data EEPROM Code Protection bit
   775                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
   776  300008                     	org	3145736
   777  300008  FF                 	db	255
   778                           
   779                           ;Config register CONFIG5H @ 0x300009
   780                           ;	unspecified, using default values
   781  300009                     	org	3145737
   782  300009  FF                 	db	255
   783                           tosu	equ	0x3FFF
   784                           tosh	equ	0x3FFE
   785                           tosl	equ	0x3FFD
   786                           stkptr	equ	0x3FFC
   787                           pclatu	equ	0x3FFB
   788                           pclath	equ	0x3FFA
   789                           pcl	equ	0x3FF9
   790                           tblptru	equ	0x3FF8
   791                           tblptrh	equ	0x3FF7
   792                           tblptrl	equ	0x3FF6
   793                           tablat	equ	0x3FF5
   794                           prodh	equ	0x3FF4
   795                           prodl	equ	0x3FF3
   796                           indf0	equ	0x3FEF
   797                           postinc0	equ	0x3FEE
   798                           postdec0	equ	0x3FED
   799                           preinc0	equ	0x3FEC
   800                           plusw0	equ	0x3FEB
   801                           fsr0h	equ	0x3FEA
   802                           fsr0l	equ	0x3FE9
   803                           wreg	equ	0x3FE8
   804                           indf1	equ	0x3FE7
   805                           postinc1	equ	0x3FE6
   806                           postdec1	equ	0x3FE5
   807                           preinc1	equ	0x3FE4
   808                           plusw1	equ	0x3FE3
   809                           fsr1h	equ	0x3FE2
   810                           fsr1l	equ	0x3FE1
   811                           bsr	equ	0x3FE0
   812                           indf2	equ	0x3FDF
   813                           postinc2	equ	0x3FDE
   814                           postdec2	equ	0x3FDD
   815                           preinc2	equ	0x3FDC
   816                           plusw2	equ	0x3FDB
   817                           fsr2h	equ	0x3FDA
   818                           fsr2l	equ	0x3FD9
   819                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _SYSTEM_Process->_IO_LEDHello
    _IO_LEDHello->_IO_LEDPrintChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     105
                  _SYSTEM_Initialize
                     _SYSTEM_Process
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Process                                       0     0      0     105
                        _IO_LEDHello
 ---------------------------------------------------------------------------------
 (2) _IO_LEDHello                                          3     3      0     105
                                              3 COMRAM     3     3      0
                    _IO_LEDPrintChar
 ---------------------------------------------------------------------------------
 (3) _IO_LEDPrintChar                                      3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _MCU_Initialize
              _OSCILLATOR_Initialize
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MCU_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _MCU_Initialize
     _OSCILLATOR_Initialize
   _SYSTEM_Process
     _IO_LEDHello
       _IO_LEDPrintChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhhhhh      33      0       0      20        0.0%
BITBIGSFRhhhhl       5      0       0      21        0.0%
BITBIGSFRhhhlh       5      0       0      22        0.0%
BITBIGSFRhhhll     559      0       0      23        0.0%
BITBIGSFRhhl         F      0       0      24        0.0%
BITBIGSFRhl          F      0       0      25        0.0%
BITBIGSFRlhhhh      60      0       0      26        0.0%
BITBIGSFRlhhl        1      0       0      27        0.0%
BITBIGSFRlhl         1      0       0      28        0.0%
BITBIGSFRll        2D9      0       0      29        0.0%
ABS                  0      0       0      30        0.0%
BIGRAM             7FF      0       0      31        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Mar 06 00:05:25 2023

                           l61 7E98                             l70 7ECA                             l64 7E8E  
                           l82 7F70                             l67 7EFE                             l92 7F7C  
                           l84 7F72                             l77 7F68                             l94 7F7E  
                           l86 7F74                             l96 7F80                             l88 7F76  
                           l98 7F82                             u10 7F34                             u11 7F30  
                           u20 7F68                             u21 7F64                             u37 7F14  
                           u47 7F48                            l101 7F88                            l110 7F94  
                          l103 7F8A                            l112 7F96                            l121 7FA2  
                          l105 7F8C                            l130 7FAE                            l114 7F98  
                          l123 7FA4                            l107 7F8E                            l132 7FB0  
                          l116 7F9A                            l125 7FA6                            l134 7FB2  
                          l119 7FA0                            l128 7FAC                            l136 7FFA  
                          l812 7F6C                            l822 7ECC                            l824 7EB4  
                          l816 7FB8                            l840 7F34                            l832 7F04  
                          l850 7F58                            l834 7F0A                            l826 7F00  
                          l852 7E90                            l844 7F38                            l836 7F22  
                          l846 7F3E                            l838 7F24                            l854 7E8A  
                          l880 7FCC                            l848 7F56                            l856 7EA4  
                          l858 7EA8                            wreg 003FE8                           _LATA 003FBA  
                         _LATB 003FBB                           _LATC 003FBC                           _main 7EA4  
                         start 7FFC                   ___param_bank 000000  __end_of_OSCILLATOR_Initialize 7ECC  
                        ?_main 0001                          _OSCEN 0039DD                          _PORTA 003FCA  
                        _PORTB 003FCB                          _PORTC 003FCC                          _TRISA 003FC2  
                        _TRISB 003FC3                          _TRISC 003FC4               ??_MCU_Initialize 0001  
                 ?_IO_LEDHello 0001                          status 003FD8                __initialization 7E9A  
                 __end_of_main 7EB4                         ??_main 0007                  __activetblptr 000002  
                       _ANSELA 003A40                         _ANSELB 003A50                         _ANSELC 003A60  
                       _OSCFRQ 0039DF         IO_LEDPrintChar@LEDCHAR 0003                         isa$std 000001  
                       tblptru 003FF8              ??_IO_LEDPrintChar 0001              _SYSTEM_Initialize 7E90  
                   __accesstop 0060        __end_of__initialization 7E9A             ?_SYSTEM_Initialize 0001  
                ___rparam_used 000001                 __pcstackCOMRAM 0001            ??_SYSTEM_Initialize 0001  
    __end_of_SYSTEM_Initialize 7E9A                        _OSCCON1 0039D9                        _OSCCON3 0039DB  
                      _OSCTUNE 0039DE                        __Hparam 0000                        __Lparam 0000  
                      __pcinit 7E9A                        __ramtop 0800                        __ptext0 7EA4  
                      __ptext1 7E8A                        __ptext2 7F00                        __ptext3 7F6A  
                      __ptext4 7E90                        __ptext5 7EB4                        __ptext6 7ECC  
        _OSCILLATOR_Initialize 7EB4           end_of_initialization 7E9A                  __Lmediumconst 0000  
              _IO_LEDPrintChar 7F6A                 _SYSTEM_Process 7E8A         ?_OSCILLATOR_Initialize 0001  
          start_initialization 7E9A        __end_of_IO_LEDPrintChar 7FFC         __end_of_SYSTEM_Process 7E90  
                ??_IO_LEDHello 0004                ?_SYSTEM_Process 0001                 _MCU_Initialize 7ECC  
                     _LATCbits 003FBC            __end_of_IO_LEDHello 7F6A               ?_IO_LEDPrintChar 0001  
       IO_LEDHello@LED_COUNTER 0006         __end_of_MCU_Initialize 7F00                       __Hrparam 0000  
                     __Lrparam 0000        ??_OSCILLATOR_Initialize 0001                    _IO_LEDHello 7F00  
              ?_MCU_Initialize 0001                       isa$xinst 000000               ??_SYSTEM_Process 0007  
