

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Mar 12 01:14:52 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.35
    20                           ; Generated 05/05/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F25K83 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _OSCTUNE	set	14814
    55  0000                     _OSCFRQ	set	14815
    56  0000                     _LATCbits	set	16316
    57  0000                     _OSCCON1	set	14809
    58  0000                     _ANSELA	set	14912
    59  0000                     _ANSELB	set	14928
    60  0000                     _ANSELC	set	14944
    61  0000                     _LATA	set	16314
    62  0000                     _TRISA	set	16322
    63  0000                     _PORTA	set	16330
    64  0000                     _TRISC	set	16324
    65  0000                     _TRISB	set	16323
    66  0000                     _LATC	set	16316
    67  0000                     _LATB	set	16315
    68  0000                     _PORTC	set	16332
    69  0000                     _PORTB	set	16331
    70  0000                     _OSCCON3	set	14811
    71  0000                     _OSCEN	set	14813
    72                           
    73                           ; #config settings
    74                           
    75                           	psect	cinit
    76  007E9E                     __pcinit:
    77                           	callstack 0
    78  007E9E                     start_initialization:
    79                           	callstack 0
    80  007E9E                     __initialization:
    81                           	callstack 0
    82  007E9E                     end_of_initialization:
    83                           	callstack 0
    84  007E9E                     __end_of__initialization:
    85                           	callstack 0
    86  007E9E  0E00               	movlw	low (__Lmediumconst shr (0+16))
    87  007EA0  6EF8               	movwf	tblptru,c
    88  007EA2  0100               	movlb	0
    89  007EA4  EF54  F03F         	goto	_main	;jump to C main() function
    90                           
    91                           	psect	cstackCOMRAM
    92  000001                     __pcstackCOMRAM:
    93                           	callstack 0
    94  000001                     ??_IO_LEDPrintChar:
    95  000001                     
    96                           ; 1 bytes @ 0x0
    97  000001                     	ds	2
    98  000003                     IO_LEDPrintChar@LEDCHAR:
    99                           	callstack 0
   100                           
   101                           ; 1 bytes @ 0x2
   102  000003                     	ds	1
   103  000004                     ??_IO_LEDHello:
   104                           
   105                           ; 1 bytes @ 0x3
   106  000004                     	ds	2
   107  000006                     IO_LEDHello@LED_COUNTER:
   108                           	callstack 0
   109                           
   110                           ; 1 bytes @ 0x5
   111  000006                     	ds	1
   112  000007                     
   113                           ; 1 bytes @ 0x6
   114 ;;
   115 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   116 ;;
   117 ;; *************** function _main *****************
   118 ;; Defined at:
   119 ;;		line 22 in file "main.c"
   120 ;; Parameters:    Size  Location     Type
   121 ;;		None
   122 ;; Auto vars:     Size  Location     Type
   123 ;;		None
   124 ;; Return value:  Size  Location     Type
   125 ;;                  1    wreg      void 
   126 ;; Registers used:
   127 ;;		wreg, status,2, status,0, cstack
   128 ;; Tracked objects:
   129 ;;		On entry : 0/0
   130 ;;		On exit  : 0/0
   131 ;;		Unchanged: 0/0
   132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   133 ;;      Params:         0       0       0       0       0       0       0       0       0
   134 ;;      Locals:         0       0       0       0       0       0       0       0       0
   135 ;;      Temps:          0       0       0       0       0       0       0       0       0
   136 ;;      Totals:         0       0       0       0       0       0       0       0       0
   137 ;;Total ram usage:        0 bytes
   138 ;; Hardware stack levels required when called: 3
   139 ;; This function calls:
   140 ;;		_SYSTEM_Initialize
   141 ;;		_SYSTEM_Process
   142 ;; This function is called by:
   143 ;;		Startup code after reset
   144 ;; This function uses a non-reentrant model
   145 ;;
   146                           
   147                           	psect	text0
   148  007EA8                     __ptext0:
   149                           	callstack 0
   150  007EA8                     _main:
   151                           	callstack 28
   152  007EA8                     
   153                           ;main.c: 23:     SYSTEM_Initialize();
   154  007EA8  EC4A  F03F         	call	_SYSTEM_Initialize	;wreg free
   155  007EAC                     l858:
   156                           
   157                           ;main.c: 25:         SYSTEM_Process();
   158  007EAC  EC47  F03F         	call	_SYSTEM_Process	;wreg free
   159  007EB0  EF56  F03F         	goto	l858
   160  007EB4  EFFE  F03F         	goto	start
   161  007EB8                     __end_of_main:
   162                           	callstack 0
   163                           
   164 ;; *************** function _SYSTEM_Process *****************
   165 ;; Defined at:
   166 ;;		line 32 in file "mcu.c"
   167 ;; Parameters:    Size  Location     Type
   168 ;;		None
   169 ;; Auto vars:     Size  Location     Type
   170 ;;		None
   171 ;; Return value:  Size  Location     Type
   172 ;;                  1    wreg      void 
   173 ;; Registers used:
   174 ;;		wreg, status,2, status,0, cstack
   175 ;; Tracked objects:
   176 ;;		On entry : 0/0
   177 ;;		On exit  : 0/0
   178 ;;		Unchanged: 0/0
   179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   180 ;;      Params:         0       0       0       0       0       0       0       0       0
   181 ;;      Locals:         0       0       0       0       0       0       0       0       0
   182 ;;      Temps:          0       0       0       0       0       0       0       0       0
   183 ;;      Totals:         0       0       0       0       0       0       0       0       0
   184 ;;Total ram usage:        0 bytes
   185 ;; Hardware stack levels used: 1
   186 ;; Hardware stack levels required when called: 2
   187 ;; This function calls:
   188 ;;		_IO_LEDHello
   189 ;; This function is called by:
   190 ;;		_main
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           	psect	text1
   195  007E8E                     __ptext1:
   196                           	callstack 0
   197  007E8E                     _SYSTEM_Process:
   198                           	callstack 28
   199  007E8E                     
   200                           ;mcu.c: 33:     IO_LEDHello();
   201  007E8E  EC82  F03F         	call	_IO_LEDHello	;wreg free
   202  007E92  0012               	return		;funcret
   203  007E94                     __end_of_SYSTEM_Process:
   204                           	callstack 0
   205                           
   206 ;; *************** function _IO_LEDHello *****************
   207 ;; Defined at:
   208 ;;		line 93 in file "mcu.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;  LED_COUNTER     1    5[COMRAM] unsigned char 
   213 ;; Return value:  Size  Location     Type
   214 ;;                  1    wreg      void 
   215 ;; Registers used:
   216 ;;		wreg, status,2, status,0, cstack
   217 ;; Tracked objects:
   218 ;;		On entry : 0/0
   219 ;;		On exit  : 0/0
   220 ;;		Unchanged: 0/0
   221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   222 ;;      Params:         0       0       0       0       0       0       0       0       0
   223 ;;      Locals:         1       0       0       0       0       0       0       0       0
   224 ;;      Temps:          2       0       0       0       0       0       0       0       0
   225 ;;      Totals:         3       0       0       0       0       0       0       0       0
   226 ;;Total ram usage:        3 bytes
   227 ;; Hardware stack levels used: 1
   228 ;; Hardware stack levels required when called: 1
   229 ;; This function calls:
   230 ;;		_IO_LEDPrintChar
   231 ;; This function is called by:
   232 ;;		_SYSTEM_Process
   233 ;; This function uses a non-reentrant model
   234 ;;
   235                           
   236                           	psect	text2
   237  007F04                     __ptext2:
   238                           	callstack 0
   239  007F04                     _IO_LEDHello:
   240                           	callstack 28
   241  007F04                     
   242                           ;mcu.c: 94:     uint8_t LED_COUNTER;;mcu.c: 95:     for(LED_COUNTER=1; LED_COUNTER<5; LE
      +                          D_COUNTER++){
   243  007F04  0E01               	movlw	1
   244  007F06  6E06               	movwf	IO_LEDHello@LED_COUNTER^0,c
   245  007F08                     l832:
   246                           
   247                           ;mcu.c: 96:         IO_LEDPrintChar(LED_COUNTER);
   248  007F08  5006               	movf	IO_LEDHello@LED_COUNTER^0,w,c
   249  007F0A  ECB5  F03F         	call	_IO_LEDPrintChar
   250  007F0E                     
   251                           ;mcu.c: 97:         _delay((unsigned long)((250)*(8000000/4000.0)));
   252  007F0E  0E03               	movlw	3
   253  007F10  6E05               	movwf	(??_IO_LEDHello+1)^0,c
   254  007F12  0E8A               	movlw	138
   255  007F14  6E04               	movwf	??_IO_LEDHello^0,c
   256  007F16  0E56               	movlw	86
   257  007F18                     u37:
   258  007F18  2EE8               	decfsz	wreg,f,c
   259  007F1A  D7FE               	bra	u37
   260  007F1C  2E04               	decfsz	??_IO_LEDHello^0,f,c
   261  007F1E  D7FC               	bra	u37
   262  007F20  2E05               	decfsz	(??_IO_LEDHello+1)^0,f,c
   263  007F22  D7FA               	bra	u37
   264  007F24                     
   265                           ;mcu.c: 98:     }
   266  007F24  2A06               	incf	IO_LEDHello@LED_COUNTER^0,f,c
   267  007F26  0E04               	movlw	4
   268  007F28  6406               	cpfsgt	IO_LEDHello@LED_COUNTER^0,c
   269  007F2A  EF99  F03F         	goto	u11
   270  007F2E  EF9B  F03F         	goto	u10
   271  007F32                     u11:
   272  007F32  EF84  F03F         	goto	l832
   273  007F36                     u10:
   274  007F36                     
   275                           ;mcu.c: 99:     for(LED_COUNTER=4; LED_COUNTER>0; LED_COUNTER--){
   276  007F36  0E04               	movlw	4
   277  007F38  6E06               	movwf	IO_LEDHello@LED_COUNTER^0,c
   278  007F3A                     l844:
   279                           
   280                           ;mcu.c: 100:         IO_LEDPrintChar(LED_COUNTER);
   281  007F3A  5006               	movf	IO_LEDHello@LED_COUNTER^0,w,c
   282  007F3C  ECB5  F03F         	call	_IO_LEDPrintChar
   283  007F40                     
   284                           ;mcu.c: 101:         _delay((unsigned long)((250)*(8000000/4000.0)));
   285  007F40  0E03               	movlw	3
   286  007F42  6E05               	movwf	(??_IO_LEDHello+1)^0,c
   287  007F44  0E8A               	movlw	138
   288  007F46  6E04               	movwf	??_IO_LEDHello^0,c
   289  007F48  0E56               	movlw	86
   290  007F4A                     u47:
   291  007F4A  2EE8               	decfsz	wreg,f,c
   292  007F4C  D7FE               	bra	u47
   293  007F4E  2E04               	decfsz	??_IO_LEDHello^0,f,c
   294  007F50  D7FC               	bra	u47
   295  007F52  2E05               	decfsz	(??_IO_LEDHello+1)^0,f,c
   296  007F54  D7FA               	bra	u47
   297  007F56                     
   298                           ;mcu.c: 102:     }
   299  007F56  0606               	decf	IO_LEDHello@LED_COUNTER^0,f,c
   300  007F58  5006               	movf	IO_LEDHello@LED_COUNTER^0,w,c
   301  007F5A  A4D8               	btfss	status,2,c
   302  007F5C  EFB2  F03F         	goto	u21
   303  007F60  EFB4  F03F         	goto	u20
   304  007F64                     u21:
   305  007F64  EF9D  F03F         	goto	l844
   306  007F68                     u20:
   307  007F68  0012               	return		;funcret
   308  007F6A                     __end_of_IO_LEDHello:
   309                           	callstack 0
   310                           
   311 ;; *************** function _IO_LEDPrintChar *****************
   312 ;; Defined at:
   313 ;;		line 113 in file "mcu.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;  LEDCHAR         1    wreg     unsigned char 
   316 ;; Auto vars:     Size  Location     Type
   317 ;;  LEDCHAR         1    2[COMRAM] unsigned char 
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, status,2, status,0
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   327 ;;      Params:         0       0       0       0       0       0       0       0       0
   328 ;;      Locals:         1       0       0       0       0       0       0       0       0
   329 ;;      Temps:          2       0       0       0       0       0       0       0       0
   330 ;;      Totals:         3       0       0       0       0       0       0       0       0
   331 ;;Total ram usage:        3 bytes
   332 ;; Hardware stack levels used: 1
   333 ;; This function calls:
   334 ;;		Nothing
   335 ;; This function is called by:
   336 ;;		_IO_LEDHello
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340                           	psect	text3
   341  007F6A                     __ptext3:
   342                           	callstack 0
   343  007F6A                     _IO_LEDPrintChar:
   344                           	callstack 28
   345                           
   346                           ;incstack = 0
   347                           ;IO_LEDPrintChar@LEDCHAR stored from wreg
   348  007F6A  6E03               	movwf	IO_LEDPrintChar@LEDCHAR^0,c
   349  007F6C                     
   350                           ;mcu.c: 114:     switch(LEDCHAR){
   351  007F6C  EFDC  F03F         	goto	l816
   352  007F70                     l82:
   353  007F70  94BC               	bcf	188,2,c	;volatile
   354  007F72  96BC               	bcf	188,3,c	;volatile
   355  007F74  98BC               	bcf	188,4,c	;volatile
   356  007F76  9ABC               	bcf	188,5,c	;volatile
   357  007F78  EFFD  F03F         	goto	l136
   358  007F7C                     l92:
   359  007F7C  84BC               	bsf	188,2,c	;volatile
   360  007F7E  96BC               	bcf	188,3,c	;volatile
   361  007F80  98BC               	bcf	188,4,c	;volatile
   362  007F82  9ABC               	bcf	188,5,c	;volatile
   363  007F84  EFFD  F03F         	goto	l136
   364  007F88                     l101:
   365  007F88  94BC               	bcf	188,2,c	;volatile
   366  007F8A  86BC               	bsf	188,3,c	;volatile
   367  007F8C  98BC               	bcf	188,4,c	;volatile
   368  007F8E  9ABC               	bcf	188,5,c	;volatile
   369  007F90  EFFD  F03F         	goto	l136
   370  007F94                     l110:
   371  007F94  94BC               	bcf	188,2,c	;volatile
   372  007F96  96BC               	bcf	188,3,c	;volatile
   373  007F98  88BC               	bsf	188,4,c	;volatile
   374  007F9A  9ABC               	bcf	188,5,c	;volatile
   375  007F9C  EFFD  F03F         	goto	l136
   376  007FA0                     l119:
   377  007FA0  94BC               	bcf	188,2,c	;volatile
   378  007FA2  96BC               	bcf	188,3,c	;volatile
   379  007FA4  98BC               	bcf	188,4,c	;volatile
   380  007FA6  8ABC               	bsf	188,5,c	;volatile
   381  007FA8  EFFD  F03F         	goto	l136
   382  007FAC                     l128:
   383  007FAC  94BC               	bcf	188,2,c	;volatile
   384  007FAE  96BC               	bcf	188,3,c	;volatile
   385  007FB0  98BC               	bcf	188,4,c	;volatile
   386  007FB2  9ABC               	bcf	188,5,c	;volatile
   387  007FB4  EFFD  F03F         	goto	l136
   388  007FB8                     l816:
   389  007FB8  5003               	movf	IO_LEDPrintChar@LEDCHAR^0,w,c
   390  007FBA  6E01               	movwf	??_IO_LEDPrintChar^0,c
   391  007FBC  6A02               	clrf	(??_IO_LEDPrintChar+1)^0,c
   392                           
   393                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   394                           ; Switch size 1, requested type "simple"
   395                           ; Number of cases is 1, Range of values is 0 to 0
   396                           ; switch strategies available:
   397                           ; Name         Instructions Cycles
   398                           ; simple_byte            4     3 (average)
   399                           ;	Chosen strategy is simple_byte
   400  007FBE  5002               	movf	(??_IO_LEDPrintChar+1)^0,w,c
   401  007FC0  0A00               	xorlw	0	; case 0
   402  007FC2  B4D8               	btfsc	status,2,c
   403  007FC4  EFE6  F03F         	goto	l880
   404  007FC8  EFD6  F03F         	goto	l128
   405  007FCC                     l880:
   406                           
   407                           ; Switch size 1, requested type "simple"
   408                           ; Number of cases is 5, Range of values is 0 to 4
   409                           ; switch strategies available:
   410                           ; Name         Instructions Cycles
   411                           ; simple_byte           16     9 (average)
   412                           ;	Chosen strategy is simple_byte
   413  007FCC  5001               	movf	??_IO_LEDPrintChar^0,w,c
   414  007FCE  0A00               	xorlw	0	; case 0
   415  007FD0  B4D8               	btfsc	status,2,c
   416  007FD2  EFB8  F03F         	goto	l82
   417  007FD6  0A01               	xorlw	1	; case 1
   418  007FD8  B4D8               	btfsc	status,2,c
   419  007FDA  EFBE  F03F         	goto	l92
   420  007FDE  0A03               	xorlw	3	; case 2
   421  007FE0  B4D8               	btfsc	status,2,c
   422  007FE2  EFC4  F03F         	goto	l101
   423  007FE6  0A01               	xorlw	1	; case 3
   424  007FE8  B4D8               	btfsc	status,2,c
   425  007FEA  EFCA  F03F         	goto	l110
   426  007FEE  0A07               	xorlw	7	; case 4
   427  007FF0  B4D8               	btfsc	status,2,c
   428  007FF2  EFD0  F03F         	goto	l119
   429  007FF6  EFD6  F03F         	goto	l128
   430  007FFA                     l136:
   431  007FFA  0012               	return		;funcret
   432  007FFC                     __end_of_IO_LEDPrintChar:
   433                           	callstack 0
   434                           
   435 ;; *************** function _SYSTEM_Initialize *****************
   436 ;; Defined at:
   437 ;;		line 19 in file "mcu.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;		None
   440 ;; Auto vars:     Size  Location     Type
   441 ;;		None
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      void 
   444 ;; Registers used:
   445 ;;		wreg, status,2, cstack
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   451 ;;      Params:         0       0       0       0       0       0       0       0       0
   452 ;;      Locals:         0       0       0       0       0       0       0       0       0
   453 ;;      Temps:          0       0       0       0       0       0       0       0       0
   454 ;;      Totals:         0       0       0       0       0       0       0       0       0
   455 ;;Total ram usage:        0 bytes
   456 ;; Hardware stack levels used: 1
   457 ;; Hardware stack levels required when called: 1
   458 ;; This function calls:
   459 ;;		_MCU_Initialize
   460 ;;		_OSCILLATOR_Initialize
   461 ;; This function is called by:
   462 ;;		_main
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           	psect	text4
   467  007E94                     __ptext4:
   468                           	callstack 0
   469  007E94                     _SYSTEM_Initialize:
   470                           	callstack 29
   471  007E94                     
   472                           ;mcu.c: 20:     MCU_Initialize();
   473  007E94  EC68  F03F         	call	_MCU_Initialize	;wreg free
   474                           
   475                           ;mcu.c: 21:     OSCILLATOR_Initialize();
   476  007E98  EC5C  F03F         	call	_OSCILLATOR_Initialize	;wreg free
   477  007E9C  0012               	return		;funcret
   478  007E9E                     __end_of_SYSTEM_Initialize:
   479                           	callstack 0
   480                           
   481 ;; *************** function _OSCILLATOR_Initialize *****************
   482 ;; Defined at:
   483 ;;		line 72 in file "mcu.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, status,2
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   497 ;;      Params:         0       0       0       0       0       0       0       0       0
   498 ;;      Locals:         0       0       0       0       0       0       0       0       0
   499 ;;      Temps:          0       0       0       0       0       0       0       0       0
   500 ;;      Totals:         0       0       0       0       0       0       0       0       0
   501 ;;Total ram usage:        0 bytes
   502 ;; Hardware stack levels used: 1
   503 ;; This function calls:
   504 ;;		Nothing
   505 ;; This function is called by:
   506 ;;		_SYSTEM_Initialize
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           	psect	text5
   511  007EB8                     __ptext5:
   512                           	callstack 0
   513  007EB8                     _OSCILLATOR_Initialize:
   514                           	callstack 29
   515  007EB8                     
   516                           ;mcu.c: 74:     OSCCON1 = 0x62;
   517  007EB8  0E62               	movlw	98
   518  007EBA  0139               	movlb	57	; () banked
   519  007EBC  6FD9               	movwf	217,b	;volatile
   520                           
   521                           ;mcu.c: 76:     OSCCON3 = 0x00;
   522  007EBE  0E00               	movlw	0
   523  007EC0  6FDB               	movwf	219,b	;volatile
   524                           
   525                           ;mcu.c: 78:     OSCEN = 0x00;
   526  007EC2  0E00               	movlw	0
   527  007EC4  6FDD               	movwf	221,b	;volatile
   528                           
   529                           ;mcu.c: 80:     OSCFRQ = 0x06;
   530  007EC6  0E06               	movlw	6
   531  007EC8  6FDF               	movwf	223,b	;volatile
   532                           
   533                           ;mcu.c: 82:     OSCTUNE = 0x00;
   534  007ECA  0E00               	movlw	0
   535  007ECC  6FDE               	movwf	222,b	;volatile
   536  007ECE                     
   537                           ; BSR set to: 57
   538  007ECE  0012               	return		;funcret
   539  007ED0                     __end_of_OSCILLATOR_Initialize:
   540                           	callstack 0
   541                           
   542 ;; *************** function _MCU_Initialize *****************
   543 ;; Defined at:
   544 ;;		line 44 in file "mcu.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;		None
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, status,2
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   558 ;;      Params:         0       0       0       0       0       0       0       0       0
   559 ;;      Locals:         0       0       0       0       0       0       0       0       0
   560 ;;      Temps:          0       0       0       0       0       0       0       0       0
   561 ;;      Totals:         0       0       0       0       0       0       0       0       0
   562 ;;Total ram usage:        0 bytes
   563 ;; Hardware stack levels used: 1
   564 ;; This function calls:
   565 ;;		Nothing
   566 ;; This function is called by:
   567 ;;		_SYSTEM_Initialize
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           	psect	text6
   572  007ED0                     __ptext6:
   573                           	callstack 0
   574  007ED0                     _MCU_Initialize:
   575                           	callstack 29
   576  007ED0                     
   577                           ;mcu.c: 46:     ANSELA = 0x00;
   578  007ED0  0E00               	movlw	0
   579  007ED2  013A               	movlb	58	; () banked
   580  007ED4  6F40               	movwf	64,b	;volatile
   581                           
   582                           ;mcu.c: 47:     ANSELB = 0x00;
   583  007ED6  0E00               	movlw	0
   584  007ED8  6F50               	movwf	80,b	;volatile
   585                           
   586                           ;mcu.c: 48:     ANSELC = 0x00;
   587  007EDA  0E00               	movlw	0
   588  007EDC  6F60               	movwf	96,b	;volatile
   589                           
   590                           ;mcu.c: 51:     TRISA = 0x00;
   591  007EDE  0E00               	movlw	0
   592  007EE0  6EC2               	movwf	194,c	;volatile
   593                           
   594                           ;mcu.c: 52:     TRISB = 0x00;
   595  007EE2  0E00               	movlw	0
   596  007EE4  6EC3               	movwf	195,c	;volatile
   597                           
   598                           ;mcu.c: 53:     TRISC = 0x00;
   599  007EE6  0E00               	movlw	0
   600  007EE8  6EC4               	movwf	196,c	;volatile
   601                           
   602                           ;mcu.c: 56:     LATA = 0x00;
   603  007EEA  0E00               	movlw	0
   604  007EEC  6EBA               	movwf	186,c	;volatile
   605                           
   606                           ;mcu.c: 57:     LATB = 0x00;
   607  007EEE  0E00               	movlw	0
   608  007EF0  6EBB               	movwf	187,c	;volatile
   609                           
   610                           ;mcu.c: 58:     LATC = 0x00;
   611  007EF2  0E00               	movlw	0
   612  007EF4  6EBC               	movwf	188,c	;volatile
   613                           
   614                           ;mcu.c: 59:     PORTA = 0x00;
   615  007EF6  0E00               	movlw	0
   616  007EF8  6ECA               	movwf	202,c	;volatile
   617                           
   618                           ;mcu.c: 60:     PORTB = 0x00;
   619  007EFA  0E00               	movlw	0
   620  007EFC  6ECB               	movwf	203,c	;volatile
   621                           
   622                           ;mcu.c: 61:     PORTC = 0x00;
   623  007EFE  0E00               	movlw	0
   624  007F00  6ECC               	movwf	204,c	;volatile
   625  007F02                     
   626                           ; BSR set to: 58
   627  007F02  0012               	return		;funcret
   628  007F04                     __end_of_MCU_Initialize:
   629                           	callstack 0
   630  0000                     
   631                           	psect	rparam
   632  0000                     
   633                           	psect	idloc
   634                           
   635                           ;Config register IDLOC0 @ 0x200000
   636                           ;	unspecified, using default values
   637  200000                     	org	2097152
   638  200000  0FFF               	dw	4095
   639                           
   640                           ;Config register IDLOC1 @ 0x200002
   641                           ;	unspecified, using default values
   642  200002                     	org	2097154
   643  200002  0FFF               	dw	4095
   644                           
   645                           ;Config register IDLOC2 @ 0x200004
   646                           ;	unspecified, using default values
   647  200004                     	org	2097156
   648  200004  0FFF               	dw	4095
   649                           
   650                           ;Config register IDLOC3 @ 0x200006
   651                           ;	unspecified, using default values
   652  200006                     	org	2097158
   653  200006  0FFF               	dw	4095
   654                           
   655                           ;Config register IDLOC4 @ 0x200008
   656                           ;	unspecified, using default values
   657  200008                     	org	2097160
   658  200008  0FFF               	dw	4095
   659                           
   660                           ;Config register IDLOC5 @ 0x20000A
   661                           ;	unspecified, using default values
   662  20000A                     	org	2097162
   663  20000A  0FFF               	dw	4095
   664                           
   665                           ;Config register IDLOC6 @ 0x20000C
   666                           ;	unspecified, using default values
   667  20000C                     	org	2097164
   668  20000C  0FFF               	dw	4095
   669                           
   670                           ;Config register IDLOC7 @ 0x20000E
   671                           ;	unspecified, using default values
   672  20000E                     	org	2097166
   673  20000E  0FFF               	dw	4095
   674                           
   675                           	psect	config
   676                           
   677                           ;Config register CONFIG1L @ 0x300000
   678                           ;	External Oscillator Selection
   679                           ;	FEXTOSC = OFF, Oscillator not enabled
   680                           ;	Reset Oscillator Selection
   681                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
   682  300000                     	org	3145728
   683  300000  EC                 	db	236
   684                           
   685                           ;Config register CONFIG1H @ 0x300001
   686                           ;	Clock out Enable bit
   687                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   688                           ;	PRLOCKED One-Way Set Enable bit
   689                           ;	PR1WAY = OFF, PRLOCK bit can be set and cleared repeatedly
   690                           ;	Clock Switch Enable bit
   691                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   692                           ;	Fail-Safe Clock Monitor Enable bit
   693                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   694  300001                     	org	3145729
   695  300001  FD                 	db	253
   696                           
   697                           ;Config register CONFIG2L @ 0x300002
   698                           ;	MCLR Enable bit
   699                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
   700                           ;	Power-up timer selection bits
   701                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   702                           ;	Multi-vector enable bit
   703                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
   704                           ;	IVTLOCK bit One-way set enable bit
   705                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
   706                           ;	Low Power BOR Enable bit
   707                           ;	LPBOREN = OFF, ULPBOR disabled
   708                           ;	Brown-out Reset Enable bits
   709                           ;	BOREN = OFF, Brown-out Reset disabled
   710  300002                     	org	3145730
   711  300002  3F                 	db	63
   712                           
   713                           ;Config register CONFIG2H @ 0x300003
   714                           ;	Brown-out Reset Voltage Selection bits
   715                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
   716                           ;	ZCD Disable bit
   717                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
   718                           ;	PPSLOCK bit One-Way Set Enable bit
   719                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
   720                           ;	Stack Full/Underflow Reset Enable bit
   721                           ;	STVREN = ON, Stack full/underflow will cause Reset
   722                           ;	Debugger Enable bit
   723                           ;	DEBUG = OFF, Background debugger disabled
   724                           ;	Extended Instruction Set Enable bit
   725                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
   726  300003                     	org	3145731
   727  300003  FF                 	db	255
   728                           
   729                           ;Config register CONFIG3L @ 0x300004
   730                           ;	WDT Period selection bits
   731                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   732                           ;	WDT operating mode
   733                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
   734  300004                     	org	3145732
   735  300004  9F                 	db	159
   736                           
   737                           ;Config register CONFIG3H @ 0x300005
   738                           ;	WDT Window Select bits
   739                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
   740                           ;	WDT input clock selector
   741                           ;	WDTCCS = SC, Software Control
   742  300005                     	org	3145733
   743  300005  FF                 	db	255
   744                           
   745                           ;Config register CONFIG4L @ 0x300006
   746                           ;	Boot Block Size selection bits
   747                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
   748                           ;	Boot Block enable bit
   749                           ;	BBEN = OFF, Boot block disabled
   750                           ;	Storage Area Flash enable bit
   751                           ;	SAFEN = OFF, SAF disabled
   752                           ;	Application Block write protection bit
   753                           ;	WRTAPP = OFF, Application Block not write protected
   754  300006                     	org	3145734
   755  300006  FF                 	db	255
   756                           
   757                           ;Config register CONFIG4H @ 0x300007
   758                           ;	Configuration Register Write Protection bit
   759                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
   760                           ;	Boot Block Write Protection bit
   761                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
   762                           ;	Data EEPROM Write Protection bit
   763                           ;	WRTD = OFF, Data EEPROM not write-protected
   764                           ;	SAF Write protection bit
   765                           ;	WRTSAF = OFF, SAF not Write Protected
   766                           ;	Low Voltage Programming Enable bit
   767                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
   768  300007                     	org	3145735
   769  300007  DF                 	db	223
   770                           
   771                           ;Config register CONFIG5L @ 0x300008
   772                           ;	PFM and Data EEPROM Code Protection bit
   773                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
   774  300008                     	org	3145736
   775  300008  FF                 	db	255
   776                           
   777                           ;Config register CONFIG5H @ 0x300009
   778                           ;	unspecified, using default values
   779  300009                     	org	3145737
   780  300009  FF                 	db	255
   781                           tosu	equ	0x3FFF
   782                           tosh	equ	0x3FFE
   783                           tosl	equ	0x3FFD
   784                           stkptr	equ	0x3FFC
   785                           pclatu	equ	0x3FFB
   786                           pclath	equ	0x3FFA
   787                           pcl	equ	0x3FF9
   788                           tblptru	equ	0x3FF8
   789                           tblptrh	equ	0x3FF7
   790                           tblptrl	equ	0x3FF6
   791                           tablat	equ	0x3FF5
   792                           prodh	equ	0x3FF4
   793                           prodl	equ	0x3FF3
   794                           indf0	equ	0x3FEF
   795                           postinc0	equ	0x3FEE
   796                           postdec0	equ	0x3FED
   797                           preinc0	equ	0x3FEC
   798                           plusw0	equ	0x3FEB
   799                           fsr0h	equ	0x3FEA
   800                           fsr0l	equ	0x3FE9
   801                           wreg	equ	0x3FE8
   802                           indf1	equ	0x3FE7
   803                           postinc1	equ	0x3FE6
   804                           postdec1	equ	0x3FE5
   805                           preinc1	equ	0x3FE4
   806                           plusw1	equ	0x3FE3
   807                           fsr1h	equ	0x3FE2
   808                           fsr1l	equ	0x3FE1
   809                           bsr	equ	0x3FE0
   810                           indf2	equ	0x3FDF
   811                           postinc2	equ	0x3FDE
   812                           postdec2	equ	0x3FDD
   813                           preinc2	equ	0x3FDC
   814                           plusw2	equ	0x3FDB
   815                           fsr2h	equ	0x3FDA
   816                           fsr2l	equ	0x3FD9
   817                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _SYSTEM_Process->_IO_LEDHello
    _IO_LEDHello->_IO_LEDPrintChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     105
                  _SYSTEM_Initialize
                     _SYSTEM_Process
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Process                                       0     0      0     105
                        _IO_LEDHello
 ---------------------------------------------------------------------------------
 (2) _IO_LEDHello                                          3     3      0     105
                                              3 COMRAM     3     3      0
                    _IO_LEDPrintChar
 ---------------------------------------------------------------------------------
 (3) _IO_LEDPrintChar                                      3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _MCU_Initialize
              _OSCILLATOR_Initialize
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MCU_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _MCU_Initialize
     _OSCILLATOR_Initialize
   _SYSTEM_Process
     _IO_LEDHello
       _IO_LEDPrintChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhhhhh      33      0       0      20        0.0%
BITBIGSFRhhhhl       5      0       0      21        0.0%
BITBIGSFRhhhlh       5      0       0      22        0.0%
BITBIGSFRhhhll     559      0       0      23        0.0%
BITBIGSFRhhl         F      0       0      24        0.0%
BITBIGSFRhl          F      0       0      25        0.0%
BITBIGSFRlhhhh      60      0       0      26        0.0%
BITBIGSFRlhhl        1      0       0      27        0.0%
BITBIGSFRlhl         1      0       0      28        0.0%
BITBIGSFRll        2D9      0       0      29        0.0%
ABS                  0      0       0      30        0.0%
BIGRAM             7FF      0       0      31        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Mar 12 01:14:52 2023

                           l61 7E9C                             l70 7ECE                             l64 7E92  
                           l82 7F70                             l67 7F02                             l92 7F7C  
                           l84 7F72                             l77 7F68                             l94 7F7E  
                           l86 7F74                             l96 7F80                             l88 7F76  
                           l98 7F82                             u10 7F36                             u11 7F32  
                           u20 7F68                             u21 7F64                             u37 7F18  
                           u47 7F4A                            l101 7F88                            l110 7F94  
                          l103 7F8A                            l112 7F96                            l121 7FA2  
                          l105 7F8C                            l130 7FAE                            l114 7F98  
                          l123 7FA4                            l107 7F8E                            l132 7FB0  
                          l116 7F9A                            l125 7FA6                            l134 7FB2  
                          l119 7FA0                            l128 7FAC                            l136 7FFA  
                          l812 7F6C                            l822 7ED0                            l824 7EB8  
                          l816 7FB8                            l840 7F36                            l832 7F08  
                          l850 7F58                            l834 7F0E                            l826 7F04  
                          l852 7E94                            l844 7F3A                            l836 7F24  
                          l846 7F40                            l838 7F26                            l854 7E8E  
                          l880 7FCC                            l848 7F56                            l856 7EA8  
                          l858 7EAC                            wreg 003FE8                           _LATA 003FBA  
                         _LATB 003FBB                           _LATC 003FBC                           _main 7EA8  
                         start 7FFC                   ___param_bank 000000  __end_of_OSCILLATOR_Initialize 7ED0  
                        ?_main 0001                          _OSCEN 0039DD                          _PORTA 003FCA  
                        _PORTB 003FCB                          _PORTC 003FCC                          _TRISA 003FC2  
                        _TRISB 003FC3                          _TRISC 003FC4               ??_MCU_Initialize 0001  
                 ?_IO_LEDHello 0001                          status 003FD8                __initialization 7E9E  
                 __end_of_main 7EB8                         ??_main 0007                  __activetblptr 000002  
                       _ANSELA 003A40                         _ANSELB 003A50                         _ANSELC 003A60  
                       _OSCFRQ 0039DF         IO_LEDPrintChar@LEDCHAR 0003                         isa$std 000001  
                       tblptru 003FF8              ??_IO_LEDPrintChar 0001              _SYSTEM_Initialize 7E94  
                   __accesstop 0060        __end_of__initialization 7E9E             ?_SYSTEM_Initialize 0001  
                ___rparam_used 000001                 __pcstackCOMRAM 0001            ??_SYSTEM_Initialize 0001  
    __end_of_SYSTEM_Initialize 7E9E                        _OSCCON1 0039D9                        _OSCCON3 0039DB  
                      _OSCTUNE 0039DE                        __Hparam 0000                        __Lparam 0000  
                      __pcinit 7E9E                        __ramtop 0800                        __ptext0 7EA8  
                      __ptext1 7E8E                        __ptext2 7F04                        __ptext3 7F6A  
                      __ptext4 7E94                        __ptext5 7EB8                        __ptext6 7ED0  
        _OSCILLATOR_Initialize 7EB8           end_of_initialization 7E9E                  __Lmediumconst 0000  
              _IO_LEDPrintChar 7F6A                 _SYSTEM_Process 7E8E         ?_OSCILLATOR_Initialize 0001  
          start_initialization 7E9E        __end_of_IO_LEDPrintChar 7FFC         __end_of_SYSTEM_Process 7E94  
                ??_IO_LEDHello 0004                ?_SYSTEM_Process 0001                 _MCU_Initialize 7ED0  
                     _LATCbits 003FBC            __end_of_IO_LEDHello 7F6A               ?_IO_LEDPrintChar 0001  
       IO_LEDHello@LED_COUNTER 0006         __end_of_MCU_Initialize 7F04                       __Hrparam 0000  
                     __Lrparam 0000        ??_OSCILLATOR_Initialize 0001                    _IO_LEDHello 7F04  
              ?_MCU_Initialize 0001                       isa$xinst 000000               ??_SYSTEM_Process 0007  
